1:"$Sreact.fragment"
2:I[87555,[],""]
3:I[31295,[],""]
4:I[6874,["874","static/chunks/874-3e820bd666038662.js","633","static/chunks/app/writeups/%5Bid%5D/layout-2577bd3482649595.js"],""]
6:I[59665,[],"OutletBoundary"]
8:I[74911,[],"AsyncMetadataOutlet"]
a:I[59665,[],"ViewportBoundary"]
c:I[59665,[],"MetadataBoundary"]
d:"$Sreact.suspense"
f:I[28393,[],""]
:HL["/_next/static/media/e4af272ccee01ff0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/5137b7a074c35308.css","style"]
0:{"P":null,"b":"sErSrOfutUclsW-VrC85j","p":"","c":["","writeups","0c4ecb3e46bccbd295151d6d30c110d4"],"i":false,"f":[[["",{"children":["writeups",{"children":[["id","0c4ecb3e46bccbd295151d6d30c110d4","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5137b7a074c35308.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"className":"dark scroll-smooth","children":[["$","head",null,{"children":["$","meta",null,{"charSet":"utf-8"}]}],["$","body",null,{"className":"text-dark dark:text-white dark:bg-midnight","style":{"fontFamily":"'Inter', 'Inter Fallback'","fontStyle":"normal"},"children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"h-screen flex items-center justify-center","children":["$","main",null,{"className":"relative pl-14","children":[["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 512 512","className":"absolute left-0 top-2 text-5xl text-grapefruit","children":["$undefined",[["$","path","0",{"d":"M256 48C140.559 48 48 140.559 48 256c0 115.436 92.559 208 208 208 115.435 0 208-92.564 208-208 0-115.441-92.564-208-208-208zm104.002 282.881l-29.12 29.117L256 285.117l-74.881 74.881-29.121-29.117L226.881 256l-74.883-74.881 29.121-29.116L256 226.881l74.881-74.878 29.12 29.116L285.119 256l74.883 74.881z","children":"$undefined"}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],["$","h1",null,{"className":"font-bold text-7xl underline decoration-grapefruit mb-5","children":"404."}],["$","p",null,{"children":"Your requested page was not found."}],["$","$L4",null,{"href":"/","className":"font-medium text-inherit","children":"Return to home →"}]]}]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":["writeups",["$","$1","c",{"children":[null,["$","main",null,{"className":"container pt-20 pb-24","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["id","0c4ecb3e46bccbd295151d6d30c110d4","d"],["$","$1","c",{"children":[null,[["$","$L4",null,{"href":"/writeups","className":"text-secondary text-sm mb-10 -ml-5 block w-max","children":"← Back to writeups"}],["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$L7",["$","$L8",null,{"promise":"$@9"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$La",null,{"children":"$Lb"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$Lc",null,{"children":["$","div",null,{"hidden":true,"children":["$","$d",null,{"fallback":null,"children":"$Le"}]}]}]]}],false]],"m":"$undefined","G":["$f",[]],"s":false,"S":true}
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
10:I[50674,["263","static/chunks/bc9c3264-6371ca03223855d4.js","810","static/chunks/48507feb-8452885980bba250.js","330","static/chunks/08ffe114-f47006c90e36a3eb.js","800","static/chunks/800-bd0deb6e7b7e903a.js","134","static/chunks/app/writeups/%5Bid%5D/page-54fe20cc7a9d3224.js"],"default"]
11:Tdcd, function parseNode(node, state, output) {
    // Give entity manager first crack at it.
    if (node.nodeType === Node.ELEMENT_NODE) {
      var entity = entityManager_.fromElement(node);
      if (entity) {
        output.currentLine.push(new firepad.Text(
            firepad.sentinelConstants.ENTITY_SENTINEL_CHARACTER,
            new firepad.Formatting(entity.toAttributes())
        ));
        return;
      }
    }

    switch (node.nodeType) {
      case Node.TEXT_NODE:
        // This probably isn't exactly right, but mostly works...
        var text = node.nodeValue.replace(/[ \n\t]+/g, ' ');
        output.currentLine.push(firepad.Text(text, state.textFormatting));
        break;
      case Node.ELEMENT_NODE:
        var style = node.getAttribute('style') || '';
        state = parseStyle(state, style);
        switch (node.nodeName.toLowerCase()) {
          case 'div':
          case 'h1':
          case 'h2':
          case 'h3':
          case 'p':
            output.newlineIfNonEmpty(state);
            parseChildren(node, state, output);
            output.newlineIfNonEmpty(state);
            break;
          case 'center':
            state = state.withAlign('center');
            output.newlineIfNonEmpty(state);
            parseChildren(node, state.withAlign('center'), output);
            output.newlineIfNonEmpty(state);
            break;
          case 'b':
          case 'strong':
            parseChildren(node, state.withTextFormatting(state.textFormatting.bold(true)), output);
            break;
          case 'u':
            parseChildren(node, state.withTextFormatting(state.textFormatting.underline(true)), output);
            break;
          case 'i':
          case 'em':
            parseChildren(node, state.withTextFormatting(state.textFormatting.italic(true)), output);
            break;
          case 's':
            parseChildren(node, state.withTextFormatting(state.textFormatting.strike(true)), output);
            break;
          case 'font':
            var face = node.getAttribute('face');
            var color = node.getAttribute('color');
            var size = parseInt(node.getAttribute('size'));
            if (face) { state = state.withTextFormatting(state.textFormatting.font(face)); }
            if (color) { state = state.withTextFormatting(state.textFormatting.color(color)); }
            if (size) { state = state.withTextFormatting(state.textFormatting.fontSize(size)); }
            parseChildren(node, state, output);
            break;
          case 'br':
            output.newline(state);
            break;
          case 'ul':
            output.newlineIfNonEmptyOrListItem(state);
            var listType = node.getAttribute('class') === 'firepad-todo' ? LIST_TYPE.TODO : LIST_TYPE.UNORDERED;
            parseChildren(node, state.withListType(listType).withIncreasedIndent(), output);
            output.newlineIfNonEmpty(state);
            break;
          case 'ol':
            output.newlineIfNonEmptyOrListItem(state);
            parseChildren(node, state.withListType(LIST_TYPE.ORDERED).withIncreasedIndent(), output);
            output.newlineIfNonEmpty(state);
            break;
          case 'li':
            parseListItem(node, state, output);
            break;
          case 'style': // ignore.
            break;
          default:
            parseChildren(node, state, output);
            break;
        }
        break;
      default:
        // Ignore other nodes (comments, etc.)
        break;
    }
  }5:["$","div",null,{"children":["$","main",null,{"className":"text-pretty max-w-5xl mx-auto text-sm [&_h1]:text-5xl [&_h1]:font-semibold [&_h1]:mb-8 [&_blockquote]:text-secondary [&_blockquote]:space-y-3 [&_blockquote]:border-l-4 [&_blockquote]:border-secondary [&_blockquote]:pl-5 [&_blockquote]:mb-5 [&>_p]:my-4 [&_img]:my-5 [&_ul]:list-disc [&_ul]:pl-6 [&_ol]:list-decimal [&_ol]:pl-6 [&_img]:rounded [&_li]:my-2","children":[["$","h1","h1-0",{"children":"GPN CTF 2024 — Letter to the editor"}],"\n",["$","blockquote","blockquote-0",{"children":["\n",["$","p","p-0",{"children":"Old software, good software:"}],"\n",["$","p","p-1",{"children":["Clone and pwn: ",["$","a","a-0",{"href":"https://github.com/FirebaseExtended/firepad","children":"https://github.com/FirebaseExtended/firepad"}]]}],"\n"]}],"\n",["$","p","p-0",{"children":"We're given a very minimal admin bot launcher page that gives us a URL to a demo Firepad."}],"\n",["$","p","p-1",{"children":["$","img","img-0",{"src":"https://gist.github.com/assets/60120929/6ec32800-c9c9-4060-8925-c4cf550fbd5b","alt":"image"}]}],"\n",["$","p","p-2",{"children":"Without any further details, it looks like we're meant to find a (likely XSS) vulnerability in the Firepad source code we can use on the admin to get the flag."}],"\n",["$","p","p-3",{"children":["Looking at the Firepad source code, we can find a ",["$","a","a-0",{"href":"https://github.com/FirebaseExtended/firepad/blob/master/lib/firepad.js#L287-L294","children":"function that lets us insert HTML strings into our pad"}],":"]}],"\n",["$","$L10","pre-0",{"className":"my-2","children":"  Firepad.prototype.insertHtml = function (index, html) {\n    var lines = firepad.ParseHtml(html, this.entityManager_);\n    this.insertText(index, lines);\n  };\n\n  Firepad.prototype.insertHtmlAtCursor = function (html) {\n    this.insertHtml(this.codeMirror_.indexFromPos(this.codeMirror_.getCursor()), html);\n  };","language":"js"}],"\n",["$","p","p-4",{"children":["Looking at ",["$","a","a-0",{"href":"https://github.com/FirebaseExtended/firepad/blob/master/lib/parse-html.js#L104-L215","children":"how this HTML is parsed"}],","]}],"\n",["$","$L10","pre-1",{"className":"my-2","children":"  var entityManager_;\n  function parseHtml(html, entityManager) {\n    // Create DIV with HTML (as a convenient way to parse it).\n    var div = (firepad.document || document).createElement('div');\n    div.innerHTML = html;\n\n    // HACK until I refactor this.\n    entityManager_ = entityManager;\n\n    var output = new ParseOutput();\n    var state = new ParseState();\n    parseNode(div, state, output);\n\n    return output.lines;\n  }","language":"js"}],"\n",["$","$L10","pre-2",{"className":"my-2","children":"$11","language":"js"}],"\n","$L12","\n","$L13","\n","$L14","\n","$L15","\n","$L16","\n","$L17","\n","$L18","\n","$L19","\n","$L1a","\n","$L1b","\n","$L1c","\n","$L1d","\n","$L1e","\n","$L1f"]}]}]
12:["$","p","p-5",{"children":"the rendering process seems to be as follows:"}]
13:["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":["Insert the HTML into a dummy ",["$","code","code-0",{"className":"opacity-75 bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"div"}]," to let the browser parse it as DOM nodes."]}],"\n",["$","li","li-1",{"children":"If the node is of a type the \"entity manager\" can support, use that to render it instead."}],"\n",["$","li","li-2",{"children":"Otherwise, treat select tags as prompts to enable / disable text formatting options in the parser state, ignoring all other tags and attributes."}],"\n"]}]
14:["$","p","p-6",{"children":["Looking at the ",["$","a","a-0",{"href":"https://github.com/FirebaseExtended/firepad/blob/master/lib/entity-manager.js#L6-L35","children":"entity manager"}],","]}]
15:["$","$L10","pre-3",{"className":"my-2","children":"  function EntityManager() {\n    this.entities_ = {};\n\n    var attrs = ['src', 'alt', 'width', 'height', 'style', 'class'];\n    this.register('img', {\n      render: function(info) {\n        utils.assert(info.src, \"image entity should have 'src'!\");\n        var attrs = ['src', 'alt', 'width', 'height', 'style', 'class'];\n        var html = '<img ';\n        for(var i = 0; i < attrs.length; i++) {\n          var attr = attrs[i];\n          if (attr in info) {\n            html += ' ' + attr + '=\"' + info[attr] + '\"';\n          }\n        }\n        html += \">\";\n        return html;\n      },\n      fromElement: function(element) {\n        var info = {};\n        for(var i = 0; i < attrs.length; i++) {\n          var attr = attrs[i];\n          if (element.hasAttribute(attr)) {\n            info[attr] = element.getAttribute(attr);\n          }\n        }\n        return info;\n      }\n    });\n  }","language":"js"}]
16:["$","p","p-7",{"children":["the only tag its set up to parse are ",["$","code","code-0",{"className":"opacity-75 bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"img"}]," tags. Furthermore, it has an allowlist of attributes that it renders selectively: though trying"]}]
17:["$","$L10","pre-4",{"className":"my-2","children":"firepad.insertHtmlAtCursor('<img src=x onerror=\"...\">')","language":"js"}]
18:["$","p","p-8",{"children":["looks like it works, it only results in self-XSS as the ",["$","code","code-0",{"className":"opacity-75 bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"onerror"}]," attribute is scrubbed when rendered on another screen."]}]
19:["$","p","p-9",{"children":["$","img","img-0",{"src":"https://gist.github.com/assets/60120929/baae2b59-e268-4aaa-af1e-fcfb460a0537","alt":"image"}]}]
1a:["$","p","p-10",{"children":"Instead, we can get the same general attack to work using attribute injection. Because the entity manager generates the final HTML string using string concatenation, if we construct a payload like"}]
1b:["$","$L10","pre-5",{"className":"my-2","children":"firepad.insertHtmlAtCursor('<img src=x width=\\'300px\" onerror=\"...\"\\'>')","language":"js"}]
1c:["$","p","p-11",{"children":["we can get the ",["$","code","code-0",{"className":"opacity-75 bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"onerror"}]," attribute to render by smuggling it inside another attribute, giving us XSS."]}]
1d:["$","p","p-12",{"children":"Since there's no source for the admin bot, it's a bit unclear what we're meant to exfiltrate from here. However, we can just try both cookies and localStorage to get the flag:"}]
1e:["$","p","p-13",{"children":["$","img","img-0",{"src":"https://gist.github.com/assets/60120929/ceaafc72-0440-4017-9d59-c2189679c084","alt":"image"}]}]
1f:["$","p","p-14",{"children":["$","img","img-0",{"src":"https://gist.github.com/assets/60120929/e194b998-5ae2-4fa8-b41f-fd13851c147e","alt":"image"}]}]
9:{"metadata":[["$","title","0",{"children":"GPN CTF 2024 — Letter to the editor | kevin.fish"}],["$","meta","1",{"name":"description","content":"Old software, good software:"}],["$","meta","2",{"property":"og:title","content":"GPN CTF 2024 — Letter to the editor"}],["$","meta","3",{"property":"og:description","content":"Old software, good software:"}],["$","meta","4",{"name":"twitter:card","content":"summary"}],["$","meta","5",{"name":"twitter:title","content":"GPN CTF 2024 — Letter to the editor"}],["$","meta","6",{"name":"twitter:description","content":"Old software, good software:"}]],"error":null,"digest":"$undefined"}
e:"$9:metadata"
