1:"$Sreact.fragment"
2:I[87555,[],""]
3:I[31295,[],""]
4:I[6874,["874","static/chunks/874-c62c375efd21db20.js","319","static/chunks/app/writeups/layout-0d6432ad4376bd82.js"],""]
6:I[59665,[],"MetadataBoundary"]
8:I[59665,[],"OutletBoundary"]
b:I[74911,[],"AsyncMetadataOutlet"]
d:I[59665,[],"ViewportBoundary"]
f:I[26614,[],""]
:HL["/_next/static/media/e4af272ccee01ff0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/9ae1c3541e2b8fd8.css","style"]
0:{"P":null,"b":"XX15ImRv_Akq3oGVYZ8Wv","p":"","c":["","writeups","747618991296df76fa586bb2cf24d7ec"],"i":false,"f":[[["",{"children":["writeups",{"children":[["id","747618991296df76fa586bb2cf24d7ec","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/9ae1c3541e2b8fd8.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"className":"dark scroll-smooth","children":[["$","head",null,{"children":["$","meta",null,{"charSet":"utf-8"}]}],["$","body",null,{"className":"text-dark dark:text-white dark:bg-midnight","style":{"fontFamily":"'Inter', 'Inter Fallback'","fontStyle":"normal"},"children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"h-screen flex items-center justify-center","children":["$","main",null,{"className":"relative pl-14","children":[["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 512 512","className":"absolute left-0 top-2 text-5xl text-grapefruit","children":["$undefined",[["$","path","0",{"d":"M256 48C140.559 48 48 140.559 48 256c0 115.436 92.559 208 208 208 115.435 0 208-92.564 208-208 0-115.441-92.564-208-208-208zm104.002 282.881l-29.12 29.117L256 285.117l-74.881 74.881-29.121-29.117L226.881 256l-74.883-74.881 29.121-29.116L256 226.881l74.881-74.878 29.12 29.116L285.119 256l74.883 74.881z","children":"$undefined"}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],["$","h1",null,{"className":"font-bold text-7xl underline decoration-grapefruit mb-5","children":"404."}],["$","p",null,{"children":"Your requested page was not found."}],["$","$L4",null,{"href":"/","className":"font-medium text-inherit","children":"Return to home →"}]]}]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":["writeups",["$","$1","c",{"children":[null,["$","main",null,{"className":"container pt-20 pb-24","children":[["$","$L4",null,{"href":"/","className":"text-secondary text-sm mb-10 -ml-5 block w-max","children":"← Back to home"}],["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]]}],{"children":[["id","747618991296df76fa586bb2cf24d7ec","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",["$","$L6",null,{"children":"$L7"}],null,["$","$L8",null,{"children":["$L9","$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","_4ZPfRp-c5kEnSktdDAKe",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:"$Sreact.suspense"
11:I[74911,[],"AsyncMetadata"]
7:["$","$10",null,{"fallback":null,"children":["$","$L11",null,{"promise":"$@12"}]}]
a:null
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
13:I[50674,["325","static/chunks/325-8cc74193b249521f.js","134","static/chunks/app/writeups/%5Bid%5D/page-d2275216898ea7fa.js"],"default"]
14:T415,import os
import re

import cv2
import numpy as np

qcd = cv2.QRCodeDetector()
arr = list(range(25 * 40))

cv2.namedWindow('img', cv2.WINDOW_NORMAL)


def binarize(img):
    # mask = cv2.adaptiveThreshold(img, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 55, 0)
    ret2, mask = cv2.threshold(img, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)

    if mask[1, 1] == 0:
        mask = np.invert(mask)

    return mask


for file in os.listdir("./qr"):
    img = cv2.imread(f'./qr/{file}')
    b, g, r = cv2.split(img)

    mask = binarize(b)
    ret, _, _ = qcd.detectAndDecode(mask)

    if not ret:
        mask = binarize(g)
        ret, _, _ = qcd.detectAndDecode(mask)

    if not ret:
        mask = binarize(r)
        ret, _, _ = qcd.detectAndDecode(mask)

    if not ret:
        cv2.imshow('img', img)
        cv2.waitKey()

    i, j = re.fullmatch(r'(\d+)_(\d+).bmp', file).groups()

    print(f'{file} ({int(i) * 40 + int(j)}): {ret}')
    arr[int(i) * 40 + int(j)] = ret or f"{{{file}}}"

print(arr)
print(''.join(arr))15:T785e,0_0.bmp (0): C5Nre0R8Tau6T
0_1.bmp (1): 5ibKMsiQv6R1z
0_10.bmp (10): IrbdDdEzxJXuB
0_11.bmp (11): UJHUl6qoiOSiv
0_12.bmp (12): CrCYV1k7Tqmxk
0_13.bmp (13): 5LffsyU3EWH54
...
9_25.bmp (385): sqr9VnmDvvYOh
9_26.bmp (386): ZyogQWH1Lhxg0
9_27.bmp (387): QqWRrkjd0CWuF
9_28.bmp (388): o7IjnUkEXMB1n
9_29.bmp (389): 7OCllWHhZrQPw
9_3.bmp (363): a2I2qdYAwoled
9_30.bmp (390): zRHdVosstJbXM
9_31.bmp (391): bnpZiGgsJ3atp
9_32.bmp (392): N4nSM7rvfpwDX
9_33.bmp (393): mvu4JCnF2ivSK
9_34.bmp (394): drQDg1d5X5hZu
9_35.bmp (395): kyIXQBmEb7TFI
9_36.bmp (396): 44bs8hnymdncb
9_37.bmp (397): 58cqnkcofOrQw
9_38.bmp (398): ljfdYo2c7uVPl
9_39.bmp (399): IXyaGmwbRytcp
9_4.bmp (364): znXCurXSSmcJT
9_5.bmp (365): vrpF3q1OTbTHq
9_6.bmp (366): OYD0QCjE3JuKC
9_7.bmp (367): 12E0fw65DbNNh
9_8.bmp (368): VBIBSwEWt7Bkv
9_9.bmp (369): s7x5GBXOBEqs8
['C5Nre0R8Tau6T', '5ibKMsiQv6R1z', 'R6HFrITlh3JUI', 'lMIm8lqRAgiUx', 'VrI9S8bAxSoqv', 'oQ7CDhBvG0IED', 'BVKGnxJufK7Ql', '1NK9VTab5DR4s', 'BHsu3MqaGWDgV', '2KZrGPq4zMSEf', 'IrbdDdEzxJXuB', 'UJHUl6qoiOSiv', 'CrCYV1k7Tqmxk', '5LffsyU3EWH54', 'jzIfLFVGheyi3', 'zh7dqmzVwiyEC', 'H7kVSQbaWKba5', '7RHnujut4ggi9', 'tm5RLEa8Fh0uL', 'PfQ37DzyBrCkt', 'pf7L5DvncxSt2', 'wn63bIAVHk4VN', 'o1y66dkXNOxSQ', 'nlWsDsyejt5Cc', 'sX9vlDLhJjoSN', '67dnB7lh96adC', 'CpraQLTl6rWVM', 'w3KDA1mPvXS8J', 'HluNPGUW7qbLa', 'hiFuzUaOk7kbs', 'hB8wxojdRqbfn', 'LjkHdlcAkEP0v', 'cx7ixvSJRPWBn', 'AcrD1mhg66hEK', 'wZSjkMRE7f09H', 'zPMNpmw54o1jM', '6vBLIk9nPVXwd', '4H6JMPN9QisfC', '6iv5d3VVq7sbg', 'jIzXIbtVCTlmd', 'BVeclREVLIDFD', 'yIfZ0wrcyB7CN', 'Ese3ETBHInJlZ', '5UZjthMowT9iS', 'h9tztPb1Jecil', '8kyVCkZZPQXWx', 'JNZM1qgm0fn35', 'hFfVTHR1U76KS', 'UYGEwHQWHjxU1', 'aiAuKDxeEnJYX', '8RL7QkIsoGbtk', 'ovdJWCkhpuiBy', 'MDVHgNdAYUcGZ', 'Ckrb6O05k9mJn', 'Yiuejsu6n0vjd', 'P387EGCRwPTci', 'WWmNfBoQdttfJ', 'WxuikLDXbS9Xt', '0v4QdieXWQuev', 'auTmftByKDQfL', 'SR0P6hnc0khg2', 'zmTLvUFVJ5moK', 'vTaue4j5sQn68', 'ZCTPAonvbWlSk', 'jG9mtsp5UoD28', 'Ox9hCiMmEAjw7', 'oCpZeqdyiPHSP', 'bdevnIu17HypQ', 'j54UUqej2AtMI', 'LBj9MDM28hLLO', '6cQqsoXkproxy', 'l5ZFLnWxyTO25', 'OvykXyjEU8kXX', 'baKXWigLr2ffY', 'EXts8GrFGxCms', 'bjLSRsGipSoV2', 'wxj2EHmPErGn7', 'E781IGbCNNClj', 'UWd2qC668QKto', 'aF1PgqZxI0PsE', 'n51V3HCl75Ze8', '90dUrNV1naq1v', 'aO2zv1l46lPUh', '2HOCt4ghX5Lgb', 'Uc8sOWAtEnfCa', 'bkOEV2vTT9076', '0Kd5Oy0NLZVnU', 'XSAErYtG1q8NS', 'JnWz3Wo1a26hc', '05CSHGk1c2p64', 'bpes2n9Fz4dQ4', 'AmywKnCEPXqot', 'NxdOaOgR6KdpY', '1UddNOVCoP0rN', 'xW2AGjcPAXdxm', 'ahh3I7lxgytZq', 'RmacHxKoAItFE', '7TTP9lq40DR8B', 'ekCf6SI52rMkx', 'D0qEyNMGpA2Co', 'lBOauVIeKYYwL', '4gSlr7NtLy7jn', '6e8x5cGmZaLA7', 'gnn7TcUw3ROVl', 'tqADxZRoBoNxj', 'RifmNL45in6Bd', 'INt1zvQ8iL0sF', 'G9LtQoXJbCQYK', 'odC4TLHelKC8j', 'tDlspZ81esv2R', 'okm6AfauP2kbW', 'eZ8GvTfIlHQ5r', 'GE3xu6N8v81fH', 'LwN1sRrU2Bsir', 'A9fSrZ3MECuwK', 'AnDRRIyWYtnNu', 'bdp1BlNSTwhFr', 'onAbS10mU14AF', 'AkeZ1wnTLn3NL', 'sjX94gkvprh6K', 'nwfpgGV8rUKpW', 'MOlXpIbyIUoRN', '3ldczndXaz9fK', 'zyAH95KIABzHI', 'yimDExZBZbgMc', 'FtrGSEZnSfjCj', 'bR69xh0kZ8Qbp', 'MO68kPXMMem6R', 'wqQ1U3Ra8XlDk', 'adIh6L7hfnwOZ', 'T7VlStFcHW3LL', 'AXk3hfmMekDbZ', 'UoaL0EmEL9g5n', 'pkwryvmWypWiA', 'QPtD33eQJegwk', 'siohbTg1n3MYG', 'IFdkUVAWXimcf', 'DEmiIqez4Uon6', 'Gh4rTfrdeJBFE', '0JYLcjP2VxZav', 'PfWV7LtgIJdi8', 'nc2ldbYlkwrdj', 'zwFWTclWL9W9j', 'EkkuadaDvdJBt', 'BPzR0FUQXzEc0', 'OCrORRwe5LwQ6', 'qXT8ltSG0FYT8', 'NHluKghW5phL8', 'q97cdc9iF9H0h', 'KV98nfU0w23Zv', 'zfzKgMdq9o5xQ', 'McwgLV6GHiVsC', 'WBpVt6LTLX5ZJ', 'lfaqmKNsbcN3t', '200xXaBY9d2k5', '50KgePXDSl4xp', 'PPik5t811CE1d', 'kCusoO1JMzFTV', 'FuJO3soPZAAPE', 'x1jQBkyntSQk1', 'F04igUi3ynf1r', 'SHJvndDlFCSIG', 'YLbkaLnpawCip', 'XW1gnFIBs5C6j', 'ryicxRiFMNvrK', 's04BURUG04lFr', 'T8APeUcMkBZlY', 'nVCcFsLdHY6cn', '5A3SuCFieFBPZ', 'RLRwY5dJVbsUz', 'Ql9ENWRpyC2D2', 'zwZU0ws4kRRW2', '{4_12.bmp}', 'L54T4DPw0J9TL', 'rT68Muo4XWVHy', 'eaKTFDLokJouA', 'lEy492568EGyl', 'K1EKXwZWyVTbc', 'qDKGv2XvJiEFj', 'qHlw3zCwtD2v1', 'sawkUJLmnW2oQ', 'zb5RU4fhLneqc', 'wPFnkiWYCngAE', 'tvBqiNTCJctHM', '6NSl4yI6XUuXm', 'ejpn8Trzo2kWh', 'rcnPK0LgPYzJi', 'f1SpDUY6RXOp5', '3iPJn8joAXOeP', 'hWwoPY6uMfa8u', 'vcjis6ZvcdWBZ', '0sE2bXKInh2dO', 'nOYugYOiMfcSf', 'o27i0yuEk6kwc', 'VkM0Nb5bmH8fv', 'rRst5eyTQ6QJM', '1iSxonKTPpvPd', 'cWV8Cpg1dsERs', '9yNH8WmfYnqAY', 'ueIbGaoeHD1xb', 'bLQbsCaAuXLei', '2B8nhPt275YDj', '5rZJpznFrMS9s', 'q2xJI3EdxvPgq', 'SFjzbscEVCP3t', 'PDOdbxN8u35Az', 'nMmf9Z7XyJpXx', 'l7bEEGkYUzebF', 'J74Qe8ZEbCM6O', 'd2LxuNyKcy3c1', 'HZF7KunUa1Tc8', '4Rhe72fs03AYw', 'BenBzbM0HWqfH', 'c8uFmFIb306nA', 'mR2L38gbF5jO6', 'QQoi7yOisI1nv', 'jpg9g3sVoeSx4', '0JXABm37w2swM', 'FL0i3IFEY5Vnv', 'tk1mWJKywgYl3', '7GHYKLEjVYkDD', 'eLdLbaFOSXTR0', 'JJh3afHhRuSQ5', '5IxcI16bryYTb', 'tAdqJgiYHJkhN', 'M3ZQpA7PdYNcJ', 'zsB1RIdhLojXL', 'iha3OqPqOUkJw', 'IbSDx6CCyIRYa', 'VkqPiyOOeuDZN', 'NnsjYB16okhCr', 'qWWSAhEdhQH2t', 'cI9cmQs6i2IUA', 'wpyENCi0mKYTq', 'PUx4bvsirGONL', 'jnEF5sWt063aT', 'e4wv8b0QMLynu', '0VdfMMiq2WTwy', 'LP4Xu3GKD0Tu2', '2AHS2ipodiTQI', '2qjLMGMdh7Z7x', 'GoEcTaAF3Exy7', 'MKrb1iARwCraa', 'heRsZyzqMuXMG', 'GeFftzGyHf0b7', 'EFeQyshWlQXgn', 'aeXm9Uzb8SMKW', '46AIhYtAiKWEf', 'b0ezkcBQaoxzy', 'z2UvCh9m51nC4', 'YeV0irnwbsXxt', 'ZVJwACXxvbI2k', 'tYUmbeV4HORN5', 'm4Qqc0HA6676b', 'tkAnRbX7sr0lA', 'lrKSvDgkbXzXg', 'LcXSQrCWDmSI2', 'xJwtw277bUcFn', 'feQf855N9h4sd', 'E7s01auRlimCq', 'RwSA3GpLRxYhH', 'VcRQgu0yykuWP', 'FwcDx7d0HsFjO', '46vkk7C7VfwA3', 'PbChRWUeBXZCD', 'SlF3YfiC2FV9r', 'hOq7TU5cAlNcw', 'DI5mfWPKIcRWZ', 'LlGAA0liF5R3H', 'E1OEyiTsFNERB', 'j0jDIAH3JgDno', 'PGacHNABqZTLc', 'RNVMduXwg5ssz', 'uytRQIbGlBr9G', 'yveIH0MTorM19', 'PzdM7nPAKkQz4', 'loEVpnGhyZOLI', '8WE2vVGLO9Prx', 'O3OazKCQrFITZ', 'Q9jdGYiawZr5B', 'BbSRFL0pmcRdh', 'AEMBj1YD1tUCO', 'XCGikrDr9nsea', 'dAjjFSMaTwGx4', 'dASGxK3hAk1mP', 'zEpCnenDxKHp9', 'YSUnJklXbqw4u', 'ejKYuY56wyfbo', 'YVQdK0dtmcT4h', 'FTFhTmcIHmjmq', 'RxALwhTjVr0jl', 'JyFQRKLobrbou', 'YK2U4MDoQdU8K', 'd1G682Tkmmc51', 'kAkpPIw4Ga0TE', '9GtLDoWtmIrKT', 'MIj4tOkB0V9kO', '12n2ESWe4KChy', '1uXSnaxK51RuY', 'AE9IklDYlesI5', 'KRq7tvjGgMxld', 'wAC6wXmncM6Cb', '5jPsmQo0MG6FT', 'jo9a1B2eZIUX3', 'g8ZUKyUDpxHMf', 'UJitOQg7RR8RW', 'TRCUtKMTjOLH0', '5SaLSCWo1I4Qo', 'saXfAD0gtkcKy', 'IiTrxauOtH01T', 'K2sG1hFBYkqwa', 'dQEOEHrhF0z4G', 'd2HvzRGXPUHYt', 'RpfklpdhRzly8', 'SA2N2RMHH8xmY', 's88EhvofdXrii', '829w2p2dqmW4O', 'rrrM3Bo36zFOU', 'wzxVfSGmRk2Kz', '04DjhwZpebyyW', 'rxlhabmYwB3s7', 'x0wyEddcaga2d', 'hvtCcqvE2GuRq', 'Z0ulVli5UIBPL', 'Ne6JIVtjnD3Oy', 'ptBZaP9gbtbNm', '0dNqF8rP5DAoi', 'UZDPaUeMCq8XC', '{8_8.bmp}', 'lh1OzTkqIb1pR', '8ltDo5iiiuCic', 'cV0aXvrmWkAem', 'bqgdYZ9MPJLBX', 'ch8LtKu9H326p', 'RfQdNVtJFC3MY', '1Yep3ONfT7dxi', 'aM1gKaOQmCoD4', 'KKGzixvDDqLLa', 'jtdvMptKFZz7E', 'AM8XwsefErn8T', 'BnXyIZi3MsUHu', 'xqegc3Yc9hzRS', 'FJb6O7pObmWlT', 'uVnqA0BTPoJX2', 'VncqzWF7cjzDr', '1M9ahNNlwvXo9', 'jHKxbquL4QTuO', 'd5LlKEtgrEjiB', 'UQHq70QREyCBN', 'hZt267KXT2hm3', 'RtcBmlbd1xuUc', 'c6ZNSC4hq2Nq4', 'dw1VErqPQxp81', '3PMGMAaegvWIU', 'IACXvFhLYcDvi', 'DrMuxyGenQ0gJ', 'BJ5mtyA2hiiHP', 'eJRccmX3ACmlc', 'UvUC3dpYKlGhg', 'XqzbaS9Ar3wCA', 'vLKwj6acuBYD5', 'gqoBfOXDSNS5J', 'w6BwRhDq0TjOP', 'a2I2qdYAwoled', 'znXCurXSSmcJT', 'vrpF3q1OTbTHq', 'OYD0QCjE3JuKC', '12E0fw65DbNNh', 'VBIBSwEWt7Bkv', 's7x5GBXOBEqs8', '6Mi9ftniXWP0g', 'hCOyOtoT3NJqX', 'AuQCbEQaBmsjb', 'RvP03sIervSXe', 'bCjRpSspC0N2E', 'hRS6ImHjLky6q', 'CETF7ahFVQdfE', '88fFIWR0LN9wA', '27cSTjw21kHGr', 'sn1DICTKZuI0c', '7ceJEQnHCshCV', 'uD5elezfu93h5', 'Vqg8TDBxQOhwI', 'hLG1HTUBKZb57', 'vQAxkFJDjGDuB', 'sqr9VnmDvvYOh', 'ZyogQWH1Lhxg0', 'QqWRrkjd0CWuF', 'o7IjnUkEXMB1n', '7OCllWHhZrQPw', 'zRHdVosstJbXM', 'bnpZiGgsJ3atp', 'N4nSM7rvfpwDX', 'mvu4JCnF2ivSK', 'drQDg1d5X5hZu', 'kyIXQBmEb7TFI', '44bs8hnymdncb', '58cqnkcofOrQw', 'ljfdYo2c7uVPl', 'IXyaGmwbRytcp', 'QU18YCpTfJO47', '4GsSbvT1YxYuZ', '8W59b5QKC854X', '6uT2xOrixTO4j', 'RGz2xHYe4UEhm', '9smrzPChJI9aB', 'ntGihFgkjtLtx', 'ZwFO8qI9HB9uN', 'kBCjfCjqJ6YPW', 'D7yo5c6SaESt3', 'JbNiRkAoqQT3Y', 'QwDXVzr360BUp', 'b2pWT62WnckH9', 'UGw9qHbbUWMSb', 'luzLR5uG4cNEh', 'aPA3Cfl2Pkg0U', '1TF61C3LDHTCI', 'vZUkzt35UpVWA', 'alUEqvZ00RGVb', 'U9ycvA8IYGfB9', 'zs3SINoeCJPXH', 'hD72ifj7tE83n', 'JjmRPdIGE6l84', 'YEM3uIlfoOjxS', '5mETbspP3ey7y', 'bZG9msO5uOy8I', 'lJWEAzimx6gmN', 'DImEQSI5KM9hu', 'PAQnfmNeHeDpI', 'fbZD0DpqeIlZe', 'V5JjxZbhaa2Vf', 'AecvyAqIxAn7x', 'eZfZUcgf8O6jM', 'RiWcjDBzoefEv', '6tHBIpEwLna61', 'bC0rKFf85LQz4', 'w6YZq7v61hKfS', '2RZv45NB8I3RV', 'ISdIGwqhs0nyf', 'CtMxTtEiVtZnf', 'BL4MOiWof9DKO', '8Xm33CHg6H7nU', 'nr4JoW3q3Wjg7', 'kaWJ8ME9pzR6p', 'G5MW2cuTj5nqm', 'sgML5dOnevkr9', '32Yztoe9ywWnX', 'xUs1leA4EcoaG', 'upt2EHcNyCxJ8', '5yY4xOy1y6zXD', 'JqDy4MBXqPR86', 'aqSqRJYfvSTqH', 'nFwRI2O4KEgtH', 'j0JMUOzn5ethY', 'W5S72yqrvy9dm', 'xUzdkmQ99UlYZ', 'eYZ2HttrJPOb8', '72p6bUzCavosH', 'qmMdQbpTZYLWe', 'VKlfbVf43pMNR', 'BUPScDi9GDLwT', 'b7abvyAuQ4e4t', '12ov4KZKRVBCL', 'OrnLyA66RRkOA', 'Zkl44gALBOQva', 'Ew9bo2eHsU7It', 'MOt0OfrPrF5Ds', '9qs5BKZEbnSXk', 'ZJKxkx7O7JQCM', 'UsmX40y3QmMBJ', 'MU1QpCsR4hZuD', '13Fkqy4DCgOvf', 'rTfWfD3ESxFeQ', '5mVwcW3gV1zka', 'VrpzuTP9OfoBZ', 'P0a4sn8IioYwk', 'ZbJWuwaR8Gu0v', 'nO4fEBek6N4Oc', '2Hxbzho5D0IcU', '8OpJUYOqx5GHJ', 'yTKjuylfzOmLM', 'fzhICoS9MuGXv', 'tKTCmmHwSL6kA', 'cffJB5K1pNQkI', 'Xww0466NXJQR8', 'ePiSLrEd0Tgzg', 'u5DNp6I2KzBmA', 'UBDLi1d2I5zFe', 'ZfVBSIcSuH1gp', 'GfezPneF5qxXB', 'obuPHbcUi4GmK', 'tD3mXB3q8qK1g', 'Qn2yLaYfF4tSZ', 'df7jRqpSY61ZK', 'W2q98QtVydBkV', 'JUcrBuqWcN13C', 'vACMRPrFNUdw1', 'KpXi0JSWa5Rx9', 'Nvop6FS3Xf9Xm', '2BRy8EjEW8rl8', 'iVHLE42plG7ZU', 'i95wJ8lHN61yB', '4pZf2tQelYvIa', 'nXggssPqIED1o', 'CXIEUthi6FNwY', 'nWJv3rzbpr5JZ', 'ZHKy0ruM0RpgM', 'i6PvCHT7e94cz', 'ZqQhx4s0fa1K4', 'mwfDKoVfgHfW0', 'zJzS14qYDQ5kE', 'S4IM2vAw2WfFk', 'M0ORFvnODssEd', 'DzuTRLvfqIAUm', 'hb7cQS8ADUXDv', 'GpFJ4GpACLMfy', 'RQO8Fd4u3LMvZ', 'prw9wuW30Y4ea', 'd1VZNv98VHGzl', 'DLjBNaMxoMzog', 'VidBMke6qfwJE', 'RbffgAip0W9nl', 'ujQrqSibJ6bzJ', 'Fxl2TkLFeAXCH', 'MbJNdNKeMLhEO', 'sKqf9DavZnL87', 'C8K9EWZddd1ZL', '6sjYmJ68L0PHH', 'Pkgn2l6r31kIh', 'F9hBxDNJHSFr5', 'RNLFZX1Gz7E9F', '4xbJHKtYPA0GY', 'JiCRRV0FoG3GD', '1c1rdxJJSgDYs', 'oWnfQ95ysJulZ', 'wg4IzsqdADIEr', 'brx26ylXN9lhs', 'Z5MpPzEgKcMAs', 'D4q5gpKICQgf5', 'L2VcFiLz3qsYT', '1MzfAcJHTg8pI', 'WJ4aITSZJtKUp', 'TOXqS2wsJ9Vyy', 'TL5WFzjLtkQZb', '0WhMDgVwGOL3M', 'CHvZXSq6OuydU', 'SwYtQvydILgBz', 'hByS97V6Dr5yJ', '4jYfreDNHYwPF', '4yxIrFmrCxSoY', 'W9oYRyEuf25xB', 'nFvg5XtbnqqFH', 'ClEgcolq0pwek', 'aq441ziSyGWHc', 'un8M7sNNpLrzM', 'luJkZfeO3m4DA', 'XYFwrQrSnGVbH', '8YJOTHGpPjhtB', 'Q4SeUvVVDKgL1', 'TuqZhkVFSw1EB', 'hb6ydENI1P3Yv', 'QMLPR8XQSgfQ8', 'qlxuVEI4Im6K9', 'sCjqBzIiql9vz', 'CP4citgtnq9h2', 'VpEzKKW7hnDGu', 'aHaSyTECdCas7', 'DRU2iK89tpiXD', 'xQESk7avThdlk', 'i7uVWMzy4AA7H', 'UEDexeaEzXSLS', 'oARtLMMGiYequ', 'EcklXzFjO6r2R', 'GzeSXpQdJghm4', 'zOcLAdiln436K', 'MXDj6SCUIOKt3', 'FtE9egFhPbNh3', 'bIz35LYyB8BzD', '1drJmYThGMuNe', 'uL40cpC7HvzA5', '0IF5pnR7AvEQy', 'NATvwg7SN4aZ8', 'pi1gTfcbNuhjZ', 'TLocMrHor3Um4', 'TbU9D5r0vZ5WM', 'YdEHzt4ahsqlp', 'D3Yxi2PkCS48E', 'eqqWe0ArmuMXR', 'dq9IDzvnZIsoJ', '5VCRs81M4YZ63', 'VFxrwwwSqKKLP', 'ZuAUkqJC4VkkI', 'yKOrn6e7JY5Wr', 'dXqnl3upwA5Zo', 'po2mGLa4XPqnC', 'Cy6mJ2Kwul0mR', '698mTdA7r5LnT', 'fmetKf3GNWhSj', 'obqUrfadg1kmk', 'GIaD4nbPSCMO4', 'Dy9FUQvUWQSlz', 'AmAQSXg2QdAcJ', 'pFxw1Vp896G8I', 'F4WhJ3k2wxfSo', 'MWdqLMZvskSbO', 'd4i7P6X82dgBt', 'pw2CJKQMxGBsY', 'lwOquCINgeN8Q', '95xUtvSi1ps6Q', '60mrvLYtWwej9', 'OHILxESisORfI', 'yyVqc3WvnDAck', 'OpU4WJZabYiG9', 'zQP5y8oDtuyWQ', 'k1CBUKYS9uWnc', 'oaJTew2TN0q6D', 'VcxCFfn3B8WN7', '4ABC2aP7L7xLW', 'IgR4ugp64NPQD', '0RHdHfqNK9xL4', 'vC5JotZAi7c6y', 'K1jtpRHERGjKU', 'adaiFRdbREbT6', 'W5r0EsfzSTqOS', 'Yje7tc2gD9bCm', '5e8GBBeSEEYJM', '9XRIpxehPADux', 'zeHC8jHNgWS2Z', 'B3XHmuTteoCGZ', 'Ds5ip5FcvxKjn', 'AIr2TOLs59el0', 'x3UzyUR4a9TGa', 'xqX2zVfO97jkb', 'TwguGTApzStn7', 'rqjGtIDpZuhrP', '5kofAOPCfiPY2', 'ukyL3Wb863c1h', 'ufQd43as8e81b', 'sYuWDaMkIYZFx', 'leMu2duZyEEII', 'ecGVVMoYxnPJL', 'PonWOuNLNreRJ', 'JPWlnYtAsVgZ2', '92HVEisRQKKJE', 'vwUIpH4usaPEz', 'xbIrJa0xLw5Zh', 'KhdcvLFmiQHwK', 'ZKKSUEcTMDEAu', 'xRJvg55Se0OrE', 'HQGfhvHXbYmqg', '1nrQau5uqZDs9', 'Qm6jh3LFGH0en', 'uC9D40L3Ema5b', 'yv50WZjFOI60Y', 'DDjo7zHHTkPxj', '6elAb0iow54kW', 'zPonlxYKmsjMd', 'jvLpAsTTv0yq4', 'eCQJqrBYotvEG', 'pTMPKUsw74UaX', 'vu7878Hevl6Id', 'cXReE4p636mMr', 'tJEzluCTGqXrz', '63wf5hPxflcJq', 'WDsO7HzFlT5GH', 'zn0wfUhjkkFzQ', 'AGHD3b9FtdNxn', 'iXOkunQn5VUTR', 'MHb8mapAeE7Vx', 'Yt9NImnlH6hKm', 'ihfPPAYBqlHX4', '04xtPJlIfFg15', '82ecWnMrvw410', 'WpouWK5N776Rz', 'gGMnBV8TsWjzL', 'qORBwwqDDHThU', 'AGUEdNigeTABD', 'oSWuDo7LWHayP', 'WOOuYsdIqq6Fv', 'xhXU6CsMuiwCk', 'ddBUCfwU8KQBD', 'q1hiZT4uSytx3', 'mp0lpynsTlfUO', 'uB2PzIgJqHfI3', 'WY3IV6tveqRas', '4YJZBcWAiTyeh', 'Yx7SCam8x4M0U', 'wyCVTat198fvG', 'Rff1aco6PZ4rb', '1yhvIZ4ftDcz9', '6qDQUXgTgyhIN', 'I4MOQ0gPlvgH9', 'PUmF198u0oO8R', 'oDAvpSkS22Fhx', 'mV9n4KQV2NT6p', 'GlnLeQ9PgvA6U', 'iwGk3XPtsBVJw', 'FwUxJdbSvkZT2', '5JPsH2rHUGtWO', 'AqiI0oUCmckee', 'Si8SqyxsyzCOe', 'jmCE3n0hOkwvz', 'GG2EGj2KdzZyp', 'b6CCzmIQ3I7Pc', 'jKJcZ8lrzDzqL', 'YDlbnatuC5B8r', 'utALpITX8bPlM', '4s2PWgV2bk58Z', 'Ri5wS3Np6EpgK', '8Ec8NATnl2zKn', 'Y63O6huTgmPKq', 'qR59kYS9p58zQ', 'V1U29rFP7oYY2', 'NfFx5e1l4XL26', 'K7veyEdTv5kML', 'J5bo3EjM3SMWz', 'VIaC9FtaPlqhX', 'eduetqYWDluo9', 'YpHdLnx4GpY4i', 'RpY2mPIglr1fo', 'EZs4L7bDuT5Vb', '9ROGPiPPEN4HX', '03FG3bZqMYCZS', '1z1ei3A6S5Ene', 'BVwcguj8Cq0Tx', 'Szr5QHmudE1jQ', 'RyFv1V3O2ykWR', '3Xl4cAhwHBKtL', 'D3a5uZRsDoFjy', 'HY8kcADzF8eQR', '7CT2QFrRrRzZl', 'X6immB2z5xoMQ', 'p2y6CX6CiJbVq', 'oiOyUO39evBXE', 'P8lEyZIEl4TBc', 'L5c27wG0as300', 's9QftIERmg2MX', 'QxColXCcUHAIO', '0k0nJwmnUkXC3', '8XxUmEaTKGS5u', 'SnAEdTtTzqmYL', 'xJi754p17aEAq', 'usWpXHJJsWwCZ', '7BDOMLuoFObx0', 'grO21uPX2bPCO', 'ix2YxXKjGtLBw', '7J6md2TY6Dscl', '0P6vOklLxiHsO', '9whtmCo45PWwK', 'DzLg8CEYn1yfU', 'd6SE8UxIzcaEq', 'G3pWbN1drS1rY', '1TNjgTUVvC9Lu', 'IpVhZuUdLzB8I', 'kqVxvikW2LNhI', 'kEXaq6N7om5gX', 'Hp57PjEarYvRT', 'IkhLXHVKAATsX', 'NrChQsn3c1vbb', '5YkSO287mMHrk', 'TtrcWLb8zl8BN', 'Kn5bGHJ6ab43l', 'QCB4j7FoeVzIv', 'GD8gjBBLhmzrB', 'n2d4fkm1y3BN2', 'VfrTA2sTY1It3', 'nbiIndF6w8kEW', 'chYoVamBkST0C', 'ZNv2AGUywHl5R', '3XXfVB7CpNKBu', 'jiwfZLU78qPKZ', 'rrsQzsoY3SuAS', 'sS41R3UxJnm2J', '7dO5591cr0lj5', 'Su9VM2WQg6Rlu', 'tYErNj7tyku6M', 'ZD1UweVKiHucS', 'C3Or3ifnZX4MQ', 'Y6ztTsVySHkse', 'OyA7GBw5eDpOy', '4KTrh23oVRKiu', '6P8L2QEeWwzg2', 'O1cSqpGjLFvz2', 'jJXqJ8dxrUlA5', 'S6ehmD6tdYjNm', 'LQa63WZ0WzYmY', 'vGipCgPjRde3p', 'uD4C0PJQDy6vS', 'Kz7z3MI1WRWwV', 'ucIb6bs33WYXG', 'OkdcVnnUXZnwh', 'UX6Glh2taEHFj', 'UmYh6Ue1yGebn', '2BVMxqt6Var3q', 'lleKWnq2LDvZT', 'Z2dP8RWpHbFdC', 'HcXUGrHvWxAJP', 'nrbAkRLLKKIs5', '1ni3CVu8KO88E', 'Z0pAPtozFJsdp', '5esj5a55COwJL', 'oxoVKOta5I12d', 'Ueiq2D6fD0Umd', '0VBJ3WyGTCy3b', 'xzUJRwk9CeJ75', 'Rsp51OJpt6v7N', 'eRhrTyU0iGAfN', '3Hc2L1lBGyJ70', 'l95INZ06EvCyC', 'bOg173iUxVdG2', 'NrNjDBZxGoGdn', 'oBZnuKeHCPnGe', 'gov5A5gkfESrs', 'zcEElbLXYEOPW', '449nnies4ua1P', 'XvRmn48N0QMwJ', '9NgARVqmzFiMe', 'SFG6nPsSXidfv', 'Cm2ddJ7QhAkxN', 'ema7sBbZ4pwlw', 'i4rUcFvFD8bcz', 'iHrbKoe2R5KbB', 'xMq4Q0kPlGj5o', 'i9TwIZgzbfUMj', 'NtulivarO207A', 'h2vUmEXegE41r', 'lJnQzw6jbHyad', 'P5Fl0c6IwEkFW', 'X0hHidBgO0OaD', 'raXBo6Z6yGZAv', 'gg0OzQudHEdEH', 'LMt2Y9XQVXlVV', '07tRCiVjieQZL', 'WkN6g6WZReWIG', 'iSUm2uApyfIvS', 'yBy5PIyKFi0Fc', 'U58DmNqcvnal6', 'xBRY1Fbly3Uac', 'j3schU8EQ91Eg', 'uut0MG5GXzIcr', 'Ege56H7KYi8gt', 'kI55gANzebiLe', '7k3HY86ggllWs', 'ltaOnBl7nyf6q', 'up4lFtnERXb4r', 'AW3X2vDfeW70e', 'gZ1IvWUAw3UUy', 'mLqnPYxF5754P', 'V2wSBUfE7v6ec', 'kTEQ0A4HHYcjF', 'v8NwY4wrB9Sq7', '9poFXCuV1uq1E', 'wLiJtVvR4Clb2', 'CzyRCTPL4CuT3', 'KdtgrTzdJEJoZ', 'fZx2M07HMr6P9', 'oKbw34glQGm9x', 'YIwSjRqnBn0mV', 'db7HOhP3ikNrD', 'lU4ZwgAYRy9OD', 'GmiGZJfmWFKHt', 'RRs6HkbGyebSr', 'XDwO2JtKhiqWl', 'QzvW1X87ZPsKd', 'Jml4I1i18DeHJ', '0O2TPJd0xrLus', 'WirPN9BeAHf5s', '9Pa1moAjJNqq3', '5EOZVIl9H3tQZ', 'H2SjlklAn9qBz', 'eiDLdq1DDA87R', '5bUJmVmwls49P', 'Zl3sAHoDcNKAH', 'yuFWDEkEWmY12', 'ZLj6EYMcNEVn2', 'eMlOcQlw2YpKb', 'ntbAGuUu8ueT7', 'n18cPIS1KarRz', 'BHb1Cr1G9Tz9d', 'fJyBCIWadSa0h', 'XKhn9g5pagG9v', 'a9MblyuU7yDei', 'FFB1cTiAyoHoz', 'rioB2LL9lfWm1', 'UVf6mqlnzwjTB', '6hlzAseIzqozi', 'qYuhOHv1kJAGu', 'VYhAjBGHO1RwX', 'MRXpi8XaJ17m2', 'hQMVJL7jXlTvM', 'FfniYca6Vho7h', 'jpTD4zAIceEQP', '3pO5CBbyO0qSX', 'zZSn3oYptOLMx', 'hR3Dm8Faszfkm', 'uFNRKjpLjRobJ', 'ufCuQW42NRkDZ', 'WbajyQQfeaT60', 'zpjIvVSzPCvRI', 'VRBV1Hwj3spXh', 'bIwAuhysnikEW', 'y1dWs6J7B5Ea0', 'giMZ55lX9i5MI', 'ivi5MuZoDLHoR', 'WB2ojghdFkkep', 'GtmwJ8AlgGRDq', 'w5kBG5w9Nu6Gq', '2hHbKDkkAZiIH', 'fmfVvUgsfBCXb', 'oHzo5Ln4MfhLv', 'tAEJcnlGT0qff', 'DiXbIYfWmTXVd', 'AjeXqUIsOlk6j', 'mBxLiDHX5ZMt2', 'xTOz7vff8SR8t', 'nNfgpnoPq1hOH', '29or8dk7mHHc6', 'dnoEQ20U4f47g', 'ksIKXpD69BChS', 'J945W7TcP4mCF', 'i2fTGL6o2h3se', 'HREzvKXwfAwcf', 'COtOk73Isc39c', 'GU5SeiIjN7vwK', 'JKYi9FpWu0lBg', 'fu08spPbEbdra', 'Hudqiw9ens2NL', 'qhQ9BwIOfIqTs', 'NW0rGR7bJdpIw', 'HQjGm2ZjNewOg', '9j06hdxrBkLio', 'UGcRzyh5Stpml', 'FkZdSvKg5qTtz', '849p1I541f5u9', 'oGQZqO19t3BVM', 'WD0T5flVd7khf', 'JRf0iQOkJh33M', '6OfPY6H7PrcVp', 'Xefpi3JXysk6W', 'A9SdWv3qRsyNo', 'Emk1nAXlUkH4G', 'qEKnQGsWeIHOP', 'X7ZhYmOwnkk1U', 'XV3eZqdnTBVS7', 'SgSBsXltUW6ru', 'oWPA9jbusN3lE', 'FT3KKJxSA8qx3', '2HFVtArPddk35', 'YYMvbLjKPQf40', 'poEDR45gyNGmF', 'dzcl7snOAuf9c', '60ZDJfHhqBX5g', 'ugkdpy30L5rP5', 'xyspXfsLizAMa', 'y3SCrR0TJp4FV', 'OQ3EMuHqUtnBJ', 'irUKsDFbmep2Y', 'PrPupjP1lLUE3', 'c6E3KEY8R2LNo', 'AgIiivc0e8HIH', 'ioWMK05iSTCUA', 'efy2O3m4WG21b', 'q0sJSCPtuKPRR', 'fWYqyNepCZFUL', '15Jxv0JRZSfBD', 'LHBVYPHg24fqk', 'ez4ZnhcO49Mv1', 'B2xcnat4YiU8R', 'zLKHSqDh8rj9C', 'K5e0hns4VxLPm', 'jKyRJmB5shlKO', '0JWdhqlQZszzv', 'N0s3qNtZ28JwO', '3E6csnS2RGI2O', 'WCnrWauzOUCls', '1foc0ku8HNifK', 'sYKQcHZlR1oaK', 'wgCurbk08511a', 'y140GTLM3qfS2', 'PzMd53BGGOpuj', 'wIRxB7HzFzA80', 'nUGUIAs927PbC', 'FMeKrsvJ71gwR', 'ZieqCkSJAfr50', '0z32b6IVBPGK2', 'R5c5nTgyvSR7j', 'OuS6XaYGpmmhD', 'a1vL1QsnpsuG1', '55XTBjlckvsWJ', 'ikT7lhTCEsUyw', 'ITSWbg0VRePOU', 'NRnvRzITOk7WZ', '8UN9C49jq7aHG', 'nu10XrMhbbZDx', 'dGppmB8Whyo8g', 'uOtu5b8yoiVfM', '49yrMZG8PcJs8', 'OEiMbzbGZsQCy', 'XGAiVrNwi60Vb', 'DtMr9j0AqmY7Y']
C5Nre0R8Tau6T5ibKMsiQv6R1zR6HFrITlh3JUIlMIm8lqRAgiUxVrI9S8bAxSoqvoQ7CDhBvG0IEDBVKGnxJufK7Ql1NK9VTab5DR4sBHsu3MqaGWDgV2KZrGPq4zMSEfIrbdDdEzxJXuBUJHUl6qoiOSivCrCYV1k7Tqmxk5LffsyU3EWH54jzIfLFVGheyi3zh7dqmzVwiyECH7kVSQbaWKba57RHnujut4ggi9tm5RLEa8Fh0uLPfQ37DzyBrCktpf7L5DvncxSt2wn63bIAVHk4VNo1y66dkXNOxSQnlWsDsyejt5CcsX9vlDLhJjoSN67dnB7lh96adCCpraQLTl6rWVMw3KDA1mPvXS8JHluNPGUW7qbLahiFuzUaOk7kbshB8wxojdRqbfnLjkHdlcAkEP0vcx7ixvSJRPWBnAcrD1mhg66hEKwZSjkMRE7f09HzPMNpmw54o1jM6vBLIk9nPVXwd4H6JMPN9QisfC6iv5d3VVq7sbgjIzXIbtVCTlmdBVeclREVLIDFDyIfZ0wrcyB7CNEse3ETBHInJlZ5UZjthMowT9iSh9tztPb1Jecil8kyVCkZZPQXWxJNZM1qgm0fn35hFfVTHR1U76KSUYGEwHQWHjxU1aiAuKDxeEnJYX8RL7QkIsoGbtkovdJWCkhpuiByMDVHgNdAYUcGZCkrb6O05k9mJnYiuejsu6n0vjdP387EGCRwPTciWWmNfBoQdttfJWxuikLDXbS9Xt0v4QdieXWQuevauTmftByKDQfLSR0P6hnc0khg2zmTLvUFVJ5moKvTaue4j5sQn68ZCTPAonvbWlSkjG9mtsp5UoD28Ox9hCiMmEAjw7oCpZeqdyiPHSPbdevnIu17HypQj54UUqej2AtMILBj9MDM28hLLO6cQqsoXkproxyl5ZFLnWxyTO25OvykXyjEU8kXXbaKXWigLr2ffYEXts8GrFGxCmsbjLSRsGipSoV2wxj2EHmPErGn7E781IGbCNNCljUWd2qC668QKtoaF1PgqZxI0PsEn51V3HCl75Ze890dUrNV1naq1vaO2zv1l46lPUh2HOCt4ghX5LgbUc8sOWAtEnfCabkOEV2vTT90760Kd5Oy0NLZVnUXSAErYtG1q8NSJnWz3Wo1a26hc05CSHGk1c2p64bpes2n9Fz4dQ4AmywKnCEPXqotNxdOaOgR6KdpY1UddNOVCoP0rNxW2AGjcPAXdxmahh3I7lxgytZqRmacHxKoAItFE7TTP9lq40DR8BekCf6SI52rMkxD0qEyNMGpA2ColBOauVIeKYYwL4gSlr7NtLy7jn6e8x5cGmZaLA7gnn7TcUw3ROVltqADxZRoBoNxjRifmNL45in6BdINt1zvQ8iL0sFG9LtQoXJbCQYKodC4TLHelKC8jtDlspZ81esv2Rokm6AfauP2kbWeZ8GvTfIlHQ5rGE3xu6N8v81fHLwN1sRrU2BsirA9fSrZ3MECuwKAnDRRIyWYtnNubdp1BlNSTwhFronAbS10mU14AFAkeZ1wnTLn3NLsjX94gkvprh6KnwfpgGV8rUKpWMOlXpIbyIUoRN3ldczndXaz9fKzyAH95KIABzHIyimDExZBZbgMcFtrGSEZnSfjCjbR69xh0kZ8QbpMO68kPXMMem6RwqQ1U3Ra8XlDkadIh6L7hfnwOZT7VlStFcHW3LLAXk3hfmMekDbZUoaL0EmEL9g5npkwryvmWypWiAQPtD33eQJegwksiohbTg1n3MYGIFdkUVAWXimcfDEmiIqez4Uon6Gh4rTfrdeJBFE0JYLcjP2VxZavPfWV7LtgIJdi8nc2ldbYlkwrdjzwFWTclWL9W9jEkkuadaDvdJBtBPzR0FUQXzEc0OCrORRwe5LwQ6qXT8ltSG0FYT8NHluKghW5phL8q97cdc9iF9H0hKV98nfU0w23ZvzfzKgMdq9o5xQMcwgLV6GHiVsCWBpVt6LTLX5ZJlfaqmKNsbcN3t200xXaBY9d2k550KgePXDSl4xpPPik5t811CE1dkCusoO1JMzFTVFuJO3soPZAAPEx1jQBkyntSQk1F04igUi3ynf1rSHJvndDlFCSIGYLbkaLnpawCipXW1gnFIBs5C6jryicxRiFMNvrKs04BURUG04lFrT8APeUcMkBZlYnVCcFsLdHY6cn5A3SuCFieFBPZRLRwY5dJVbsUzQl9ENWRpyC2D2zwZU0ws4kRRW2{4_12.bmp}L54T4DPw0J9TLrT68Muo4XWVHyeaKTFDLokJouAlEy492568EGylK1EKXwZWyVTbcqDKGv2XvJiEFjqHlw3zCwtD2v1sawkUJLmnW2oQzb5RU4fhLneqcwPFnkiWYCngAEtvBqiNTCJctHM6NSl4yI6XUuXmejpn8Trzo2kWhrcnPK0LgPYzJif1SpDUY6RXOp53iPJn8joAXOePhWwoPY6uMfa8uvcjis6ZvcdWBZ0sE2bXKInh2dOnOYugYOiMfcSfo27i0yuEk6kwcVkM0Nb5bmH8fvrRst5eyTQ6QJM1iSxonKTPpvPdcWV8Cpg1dsERs9yNH8WmfYnqAYueIbGaoeHD1xbbLQbsCaAuXLei2B8nhPt275YDj5rZJpznFrMS9sq2xJI3EdxvPgqSFjzbscEVCP3tPDOdbxN8u35AznMmf9Z7XyJpXxl7bEEGkYUzebFJ74Qe8ZEbCM6Od2LxuNyKcy3c1HZF7KunUa1Tc84Rhe72fs03AYwBenBzbM0HWqfHc8uFmFIb306nAmR2L38gbF5jO6QQoi7yOisI1nvjpg9g3sVoeSx40JXABm37w2swMFL0i3IFEY5Vnvtk1mWJKywgYl37GHYKLEjVYkDDeLdLbaFOSXTR0JJh3afHhRuSQ55IxcI16bryYTbtAdqJgiYHJkhNM3ZQpA7PdYNcJzsB1RIdhLojXLiha3OqPqOUkJwIbSDx6CCyIRYaVkqPiyOOeuDZNNnsjYB16okhCrqWWSAhEdhQH2tcI9cmQs6i2IUAwpyENCi0mKYTqPUx4bvsirGONLjnEF5sWt063aTe4wv8b0QMLynu0VdfMMiq2WTwyLP4Xu3GKD0Tu22AHS2ipodiTQI2qjLMGMdh7Z7xGoEcTaAF3Exy7MKrb1iARwCraaheRsZyzqMuXMGGeFftzGyHf0b7EFeQyshWlQXgnaeXm9Uzb8SMKW46AIhYtAiKWEfb0ezkcBQaoxzyz2UvCh9m51nC4YeV0irnwbsXxtZVJwACXxvbI2ktYUmbeV4HORN5m4Qqc0HA6676btkAnRbX7sr0lAlrKSvDgkbXzXgLcXSQrCWDmSI2xJwtw277bUcFnfeQf855N9h4sdE7s01auRlimCqRwSA3GpLRxYhHVcRQgu0yykuWPFwcDx7d0HsFjO46vkk7C7VfwA3PbChRWUeBXZCDSlF3YfiC2FV9rhOq7TU5cAlNcwDI5mfWPKIcRWZLlGAA0liF5R3HE1OEyiTsFNERBj0jDIAH3JgDnoPGacHNABqZTLcRNVMduXwg5sszuytRQIbGlBr9GyveIH0MTorM19PzdM7nPAKkQz4loEVpnGhyZOLI8WE2vVGLO9PrxO3OazKCQrFITZQ9jdGYiawZr5BBbSRFL0pmcRdhAEMBj1YD1tUCOXCGikrDr9nseadAjjFSMaTwGx4dASGxK3hAk1mPzEpCnenDxKHp9YSUnJklXbqw4uejKYuY56wyfboYVQdK0dtmcT4hFTFhTmcIHmjmqRxALwhTjVr0jlJyFQRKLobrbouYK2U4MDoQdU8Kd1G682Tkmmc51kAkpPIw4Ga0TE9GtLDoWtmIrKTMIj4tOkB0V9kO12n2ESWe4KChy1uXSnaxK51RuYAE9IklDYlesI5KRq7tvjGgMxldwAC6wXmncM6Cb5jPsmQo0MG6FTjo9a1B2eZIUX3g8ZUKyUDpxHMfUJitOQg7RR8RWTRCUtKMTjOLH05SaLSCWo1I4QosaXfAD0gtkcKyIiTrxauOtH01TK2sG1hFBYkqwadQEOEHrhF0z4Gd2HvzRGXPUHYtRpfklpdhRzly8SA2N2RMHH8xmYs88EhvofdXrii829w2p2dqmW4OrrrM3Bo36zFOUwzxVfSGmRk2Kz04DjhwZpebyyWrxlhabmYwB3s7x0wyEddcaga2dhvtCcqvE2GuRqZ0ulVli5UIBPLNe6JIVtjnD3OyptBZaP9gbtbNm0dNqF8rP5DAoiUZDPaUeMCq8XC{8_8.bmp}:["$","div",null,{"children":["$","main",null,{"className":"max-w-5xl mx-auto text-sm [&_h1]:text-5xl [&_h1]:font-semibold [&_h1]:mb-8 [&_blockquote]:text-secondary [&_blockquote]:space-y-3 [&_blockquote]:border-l-4 [&_blockquote]:border-secondary [&_blockquote]:pl-5 [&_blockquote]:mb-5 [&>_p]:my-3 [&_img]:my-5 [&_ul]:list-disc [&_ul]:pl-6 [&_img]:rounded [&_li]:my-2","children":[["$","h1","h1-0",{"children":"PatriotCTF 2024 — Let's Play [steg]Hide & Seek"}],"\n",["$","blockquote","blockquote-0",{"children":["\n",["$","p","p-0",{"children":"Not much of a backstory here... there is an embedded flag in here somewhere, your job is to find it."}],"\n"]}],"\n",["$","p","p-0",{"children":"We're given a \"QR code mosaic\" looking like this:"}],"\n",["$","p","p-1",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/1cd54f3b-de05-4e5c-969a-4e1b2c1ffe66","alt":"qr_mosaic"}]}],"\n",["$","p","p-2",{"children":["Plugging it into Aperi'Solve, we can extract a ",["$","code","code-0",{"className":"text-primary bg-black/20 rounded p-1","children":"patriotCTF.bmp"}]," resembling the logo on their website:"]}],"\n",["$","p","p-3",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/287dc67a-c7d4-4838-b376-1e7cc8c71e2e","alt":"image"}]}],"\n",["$","p","p-4",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/5b28c77f-7ff9-4224-93be-a7b00be92627","alt":"image"}]}],"\n",["$","p","p-5",{"children":"From the original image, we can extract each 58x58 QR code in the 25x40 grid to generate 1000 individual images like so:"}],"\n",["$","p","p-6",{"children":[["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/cda2f069-cf2e-4bb1-ab3d-535b24d92de4","alt":"image"}],"\n",["$","img","img-1",{"src":"https://gist.github.com/user-attachments/assets/d07c984a-ea36-480e-ad40-a8580d09c076","alt":"image"}],"\n",["$","img","img-2",{"src":"https://gist.github.com/user-attachments/assets/246907d4-b558-45da-a9b1-4278c6887a74","alt":"image"}],"\n",["$","img","img-3",{"src":"https://gist.github.com/user-attachments/assets/01449b1c-8a35-4227-aafd-e97e07380fe5","alt":"image"}],"\n",["$","img","img-4",{"src":"https://gist.github.com/user-attachments/assets/926a9715-e8a1-4a82-9944-34d8821ccdcd","alt":"image"}],"\n",["$","img","img-5",{"src":"https://gist.github.com/user-attachments/assets/a425993b-d2b6-46b4-aa7d-679152de566d","alt":"image"}],"\n",["$","img","img-6",{"src":"https://gist.github.com/user-attachments/assets/83fc7730-7268-4497-ae8d-8c39334850a9","alt":"image"}]]}],"\n",["$","p","p-7",{"children":"Ideally, we could just scan each QR code programmatically and concat them together to get something relating to the flag. However, due to the sometimes terrible color contrast within QR codes, not every QR code is scannable in its original palette."}],"\n",["$","p","p-8",{"children":"Furthermore, each QR code has some sort of noise applied to it:"}],"\n",["$","p","p-9",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/f20917d4-04ef-4bdd-b5b0-20e8c48a2851","alt":"image"}]}],"\n",["$","p","p-10",{"children":"Thus, we can't do a simple algorithm of mapping the (0, 0) color to white and the (8, 8) color to black to retrieve a scannable QR code."}],"\n",["$","p","p-11",{"children":["Neither can we do an algorithm that relies on static color thresholding with ",["$","code","code-0",{"className":"text-primary bg-black/20 rounded p-1","children":"inRange"}],":"]}],"\n",["$","$L13","pre-0",{"className":"my-4","children":"bg_color = np.array(img[0, 0])\nmask = cv2.inRange(img, bg_color - 10, bg_color + 10)","language":"py"}],"\n",["$","p","p-12",{"children":"While the RGB or HSV thresholds can be adjusted so that the color variance of the noise generally falls within it, the same thresholds won't work for a low-contrast QR code where the color of the QR code itself falls within the threshold from the background color."}],"\n",["$","p","p-13",{"children":["Instead, we can use the more robust method of ",["$","a","a-0",{"href":"https://docs.opencv.org/4.x/d7/d4d/tutorial_py_thresholding.html#autotoc_md1417","children":"Otsu's binarization"}],"."]}],"\n",["$","p","p-14",{"children":"As a final hitch, Otsu's binarization works on single-channel (grayscale) images; if we just tried to grayscale all the QR codes, though, QR codes where the background and foreground have almost the same brightness / saturation (and the only difference is their color) won't yield desireable results. As a hacky bandaid solution for this, though, we can try to run binarization on all 3 color channels of the image."}],"\n",["$","p","p-15",{"children":"Here's a script that does just that,"}],"\n",["$","$L13","pre-1",{"className":"my-4","children":"$14","language":"py"}],"\n",["$","p","p-16",{"children":"producing the following output:"}],"\n",["$","$L13","pre-2",{"className":"my-4","children":"$15","language":"$undefined"}],"\n",["$","p","p-17",{"children":"While 2 QR codes still needed to be scanned and inputted manually, the bigger question is what the outputs even mean. The character sequence doesn't look like anything interesting under base64 or any related encoding scheme:"}],"\n",["$","p","p-18",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/9d21bbc9-8fe2-4a58-b326-21bdc358961c","alt":"image"}]}],"\n",["$","p","p-19",{"children":"Because each QR code result is 13 characters long, they cannot be individually decoded via base64, either:"}],"\n",["$","$L13","pre-3",{"className":"my-4","children":">>> base64.decodebytes('C5Nre0R8Tau6T'.encode()).decode()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\base64.py\", line 562, in decodebytes\n    return binascii.a2b_base64(s)\nbinascii.Error: Invalid base64-encoded string: number of data characters (13) cannot be 1 more than a multiple of 4","language":"py"}],"\n",["$","p","p-20",{"children":"Going back to the extracted logo from earlier, we can try diffing it with the one on their website, only to find that the aspect ratios are different:"}],"\n",["$","$L13","pre-4",{"className":"my-4","children":"import cv2\n\n\norigin = cv2.imread('website.png')\nextracted = cv2.imread('extracted.bmp')\n\nprint(origin.shape, extracted.shape)\n\nresized = cv2.resize(origin, extracted.shape[:2][::-1])\n\ncv2.namedWindow('out', cv2.WINDOW_NORMAL)\ncv2.imshow('out', resized)\ncv2.waitKey()\n\ncv2.imshow('out', extracted - resized)\ncv2.waitKey()\n\ncv2.imshow('out', extracted ^ resized)\ncv2.waitKey()","language":"py"}],"\n",["$","p","p-21",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/ceb79107-a04f-4765-ab28-04e8e25e388b","alt":"out"}]}],"\n",["$","p","p-22",{"children":"although, with the exception of the black blob to the top left of the first T, most of this diff can be waved away as compression noise. Of course, the extracted image has no further data on Aperi'Solve either:"}],"\n",["$","p","p-23",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/939f37eb-d6e0-4c61-9eb0-a54a220915e4","alt":"image"}]}],"\n",["$","p","p-24",{"children":["Instead, we can guess that the QR code strings are a wordlist for ",["$","a","a-0",{"href":"https://github.com/RickdeJager/stegseek","children":"stegseek"}],". Trying these passwords on the extracted logo file,"]}],"\n",["$","p","p-25",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/36482a62-29f3-4000-873c-e31462440cb4","alt":"image"}]}],"\n",["$","p","p-26",{"children":"we extract one final QR code:"}],"\n",["$","p","p-27",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/1044c9e7-344c-4433-8ac4-d1ecb0d35651","alt":"out"}]}],"\n",["$","p","p-28",{"children":"Scanning this, we get the flag."}],"\n",["$","$L13","pre-5",{"className":"my-4","children":"PCTF{QR_M0s41c_St3g0_M4st3r}","language":"$undefined"}]]}]}]
12:{"metadata":[["$","title","0",{"children":"PatriotCTF 2024 — Let's Play [steg]Hide & Seek | kevin.fish"}],["$","meta","1",{"name":"description","content":"Not much of a backstory here... there is an embedded flag in here somewhere, your job is to find it."}],["$","meta","2",{"property":"og:title","content":"PatriotCTF 2024 — Let's Play [steg]Hide & Seek"}],["$","meta","3",{"property":"og:description","content":"Not much of a backstory here... there is an embedded flag in here somewhere, your job is to find it."}],["$","meta","4",{"name":"twitter:card","content":"summary"}],["$","meta","5",{"name":"twitter:title","content":"PatriotCTF 2024 — Let's Play [steg]Hide & Seek"}],["$","meta","6",{"name":"twitter:description","content":"Not much of a backstory here... there is an embedded flag in here somewhere, your job is to find it."}]],"error":null,"digest":"$undefined"}
c:{"metadata":"$12:metadata","error":null,"digest":"$undefined"}
