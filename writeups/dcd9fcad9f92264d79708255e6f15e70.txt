1:"$Sreact.fragment"
2:I[87555,[],""]
3:I[31295,[],""]
4:I[6874,["874","static/chunks/874-c62c375efd21db20.js","319","static/chunks/app/writeups/layout-0d6432ad4376bd82.js"],""]
6:I[59665,[],"MetadataBoundary"]
8:I[59665,[],"OutletBoundary"]
b:I[74911,[],"AsyncMetadataOutlet"]
d:I[59665,[],"ViewportBoundary"]
f:I[26614,[],""]
:HL["/_next/static/media/e4af272ccee01ff0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/9ae1c3541e2b8fd8.css","style"]
0:{"P":null,"b":"joJrwkpbKjBdtt5PZQ6uf","p":"","c":["","writeups","dcd9fcad9f92264d79708255e6f15e70"],"i":false,"f":[[["",{"children":["writeups",{"children":[["id","dcd9fcad9f92264d79708255e6f15e70","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/9ae1c3541e2b8fd8.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"className":"dark scroll-smooth","children":[["$","head",null,{"children":["$","meta",null,{"charSet":"utf-8"}]}],["$","body",null,{"className":"text-dark dark:text-white dark:bg-midnight","style":{"fontFamily":"'Inter', 'Inter Fallback'","fontStyle":"normal"},"children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"h-screen flex items-center justify-center","children":["$","main",null,{"className":"relative pl-14","children":[["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 512 512","className":"absolute left-0 top-2 text-5xl text-grapefruit","children":["$undefined",[["$","path","0",{"d":"M256 48C140.559 48 48 140.559 48 256c0 115.436 92.559 208 208 208 115.435 0 208-92.564 208-208 0-115.441-92.564-208-208-208zm104.002 282.881l-29.12 29.117L256 285.117l-74.881 74.881-29.121-29.117L226.881 256l-74.883-74.881 29.121-29.116L256 226.881l74.881-74.878 29.12 29.116L285.119 256l74.883 74.881z","children":"$undefined"}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],["$","h1",null,{"className":"font-bold text-7xl underline decoration-grapefruit mb-5","children":"404."}],["$","p",null,{"children":"Your requested page was not found."}],["$","$L4",null,{"href":"/","className":"font-medium text-inherit","children":"Return to home →"}]]}]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":["writeups",["$","$1","c",{"children":[null,["$","main",null,{"className":"container pt-20 pb-24","children":[["$","$L4",null,{"href":"/","className":"text-secondary text-sm mb-10 -ml-5 block w-max","children":"← Back to home"}],["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]]}],{"children":[["id","dcd9fcad9f92264d79708255e6f15e70","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",["$","$L6",null,{"children":"$L7"}],null,["$","$L8",null,{"children":["$L9","$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","MJKdjSAYsxAXysynZFwVv",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:"$Sreact.suspense"
11:I[74911,[],"AsyncMetadata"]
7:["$","$10",null,{"fallback":null,"children":["$","$L11",null,{"promise":"$@12"}]}]
a:null
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
12:{"metadata":[["$","title","0",{"children":"kevin.fish"}]],"error":null,"digest":"$undefined"}
c:{"metadata":"$12:metadata","error":null,"digest":"$undefined"}
13:I[50674,["325","static/chunks/325-8cc74193b249521f.js","134","static/chunks/app/writeups/%5Bid%5D/page-d2275216898ea7fa.js"],"default"]
14:T19bb,const express = require("express");
const http = require("http");
const app = express();
const path = require("path");
const { WebSocketServer } = require("ws");
const {readFileSync} = require("fs");

const server = http.createServer(app);

const wss = new WebSocketServer({server: server});

const FLAG = readFileSync(path.join(__dirname, "flag.txt")).toString();

wss.on("connection", ws => {
	console.log("New connection!");
	let level = 0;
	let gameState = JSON.parse(JSON.stringify(levels[level]));
	let interval = setInterval(physicsLoop, 20);
	let goalTimer = 0;

	function physicsLoop() {
		applyVelocity(gameState.circle, gameState.rects);

		for (let obj of gameState.rects) {
			circleRectCollision(gameState.circle, obj);
		}
		if (circlesIntersecting(gameState.goal, gameState.circle)) {
			goalTimer++;
		} else {
			goalTimer = 0;
		}
		if (goalTimer > 50) {
			level++;
			if (level >= levels.length) {
				ws.send(JSON.stringify({
					type: "congrats",
					value: process.env.GZCTF_FLAG
				}));
				ws.close();
				return;
			}
			goalTimer = 0;
			gameState = JSON.parse(JSON.stringify(levels[level]));
			init();
		}
		ws.send(JSON.stringify({
			type: "ball",
			value: {
				x: gameState.circle.x,
				y: gameState.circle.y,
				moving: gameState.circle.dx + gameState.circle.dy > 0
			}
		}));
	}

	ws.send(JSON.stringify({
		type: "start"
	}));

	function init() {
		ws.send(JSON.stringify({
			type: "colliders",
			value: gameState.rects
		}));
		ws.send(JSON.stringify({
			type: "flag",
			value: gameState.goal
		}));
	}
	init();

	ws.on("message", data => {
		let parsed;
		try {
			parsed = JSON.parse(data.toString?.());
		} catch (e) {}
		if (!parsed) return;
		
		switch (parsed?.type) {
			case "launch":
				if (!parsed?.value) return;
				if (typeof parsed?.value?.dx !== "number") return;
				if (typeof parsed?.value?.dy !== "number") return;
				launchBall(gameState.circle, parsed.value);
			break;
			case "cheat":
				gameState.circle.x = gameState.goal.x;
				gameState.circle.y = gameState.goal.y;
			break;
		}
	});

	ws.on("close", () => {
		clearInterval(interval);
	});
})

app.get("/", (req, res)=>{
	res.sendFile(path.join(__dirname, "public", "index.html"))
});

const WALL_THICKNESS = 30;
const MAX_SPEED = 52;
const DECELERATION = 0.985;
let levels = [{
	goal: { x: 230, y: 420, r: 20 },
	circle: { x: 200, y: 200, dx: 0, dy: 0, r: 12 },
	rects: [
		[150, 500, 1000, WALL_THICKNESS],
		[150, 300, WALL_THICKNESS, 230],
		[150, 300, 800, WALL_THICKNESS],
		[1150, 50, WALL_THICKNESS, 480],
		[150, 50, 1000, WALL_THICKNESS],
		[150, 50, WALL_THICKNESS, 280],
		[400, 50, WALL_THICKNESS, 180],
		[600, 150, WALL_THICKNESS, 150],
		[800, 50, WALL_THICKNESS, 180],
		[500, 400, 450, WALL_THICKNESS]
	]
},{
	goal: { x: 340, y: 425, r: 20 },
	circle: { x: 100, y: 100, dx: 0, dy: 0, r: 12 },
	rects: [
		[50, 50, 1200, WALL_THICKNESS],
		[1200 + WALL_THICKNESS, 50, WALL_THICKNESS, 700 + WALL_THICKNESS],
		[50, 50, WALL_THICKNESS, 700],
		[50, 750, 1200, WALL_THICKNESS],

		[50, 120, 1130, WALL_THICKNESS],
		[1150, 130, WALL_THICKNESS, 580],
		[120, 680, 1050, WALL_THICKNESS],
		[120, 200, WALL_THICKNESS, 500],

		[120, 200, 980, WALL_THICKNESS],
		[1070, 220, WALL_THICKNESS, 400],
		[200, 590, 900, WALL_THICKNESS],
		[200, 270, WALL_THICKNESS, 330],

		[200, 270, 800, WALL_THICKNESS],
		[1000, 270, WALL_THICKNESS, 270],
		[300, 510, 700, WALL_THICKNESS],
		[280, 340, WALL_THICKNESS, 200],

		[280, 330, 670, WALL_THICKNESS],
		[920, 330, WALL_THICKNESS, 140],

		// :3
		[370, 390, 25, 25],
		[370, 440, 25, 25],
		[420, 370, 60, 25],
		[460, 370, 25, 110],
		[420, 415, 60, 25],
		[420, 460, 65, 25],
	]
},{
	goal: { x: 1100, y: 630, r: 20 },
	circle: { x: 250, y: 250, dx: 0, dy: 0, r: 12 },
	rects: [
		[50, 50, 400, WALL_THICKNESS],
		[50, 400, 420, WALL_THICKNESS],
		[50, 50, WALL_THICKNESS, 350],
		[450, 50, WALL_THICKNESS, 380],

		[700, 100, 200, WALL_THICKNESS],
		[700, 700, 500, WALL_THICKNESS],
		[700, 100, WALL_THICKNESS, 600],
		[900, 100, WALL_THICKNESS, 450],
		[900, 530, 300, WALL_THICKNESS],
		[1200, 530, WALL_THICKNESS, 200],
	]
}];

function circlesIntersecting(circle1, circle2) {	
	return Math.sqrt((circle2.x - circle1.x) ** 2 + (circle2.y - circle1.y) ** 2) <= circle1.r + circle2.r;
}

function launchBall(circle, vel) {
	if (circle.dx === 0 && circle.dy === 0) {
			circle.dx = vel.dx;
			circle.dy = vel.dy;
		if (circle.dx > MAX_SPEED) {
			circle.dx = MAX_SPEED;
		} else if (circle.dx < -MAX_SPEED) {
			circle.dx = -MAX_SPEED;
		}
		if (circle.dy > MAX_SPEED) {
			circle.dy = MAX_SPEED;
		} else if (circle.dy < -MAX_SPEED) {
			circle.dy = -MAX_SPEED;
		}
	}
}

function applyVelocity(circle, rects) {
	let initialX = circle.x;
	let initialY = circle.y;

	while (initialX === circle.x && initialY === circle.y &&
		(circle.dy !== 0 || circle.dx !== 0)) {
		circle.x += circle.dx;
		circle.y += circle.dy;

		for (let rect of rects) {
			if (circleRectCollision(circle, rect)) {
				circle.x = initialX;
				circle.y = initialY;

				while (circleRectCollision(circle, rect)) {
					circle.x += (circle.dx / Math.abs(circle.dx)) * circle.r;
					circle.y += (circle.dy / Math.abs(circle.dy)) * circle.r;
				}
			}
		}

		circle.dx = circle.dx * DECELERATION;
		circle.dy = circle.dy * DECELERATION;
		if (Math.abs(circle.dx * DECELERATION) < 0.15 && Math.abs(circle.dy * DECELERATION) < 0.15) {
			circle.dx = 0;
			circle.dy = 0;
		}
	}
}

function circleRectCollision(circle, rect) {
	let closestX = clamp(circle.x, rect[0], rect[0] + rect[2]);
	let closestY = clamp(circle.y, rect[1], rect[1] + rect[3]);

	let distanceX = circle.x - closestX;
	let distanceY = circle.y - closestY;
	let distanceSquared = (distanceX * distanceX) + (distanceY * distanceY);

	if (distanceSquared < (circle.r * circle.r)) {
		let distance = Math.sqrt(distanceSquared);
		let overlap = circle.r - distance;

		if (distance > 0) {
			circle.x += overlap * (distanceX / distance);
			circle.y += overlap * (distanceY / distance);
		}

		let velocityMagnitude = Math.sqrt(circle.dx * circle.dx + circle.dy * circle.dy);
		if (velocityMagnitude > 0) {
			let normalX = distanceX / distance;
			let normalY = distanceY / distance;
			let dotProduct = circle.dx * normalX + circle.dy * normalY;

			if (dotProduct < 0) {
				circle.dx -= 2 * dotProduct * normalX;
				circle.dy -= 2 * dotProduct * normalY;
			}
		}
		return true;
	}
	return false;
}

function clamp(value, min, max) {
	return Math.min(Math.max(value, min), max);
}

app.use(express.static(path.join(__dirname, "public")))

server.listen(8080);5:["$","div",null,{"children":["$","main",null,{"className":"max-w-5xl mx-auto text-sm [&_h1]:text-5xl [&_h1]:font-semibold [&_h1]:mb-8 [&_blockquote]:text-secondary [&_blockquote]:space-y-3 [&_blockquote]:border-l-4 [&_blockquote]:border-secondary [&_blockquote]:pl-5 [&_blockquote]:mb-5 [&>_p]:my-3 [&_img]:my-5 [&_ul]:list-disc [&_ul]:pl-6 [&_img]:rounded [&_li]:my-2","children":[["$","h1","h1-0",{"children":"San Diego CTF 2024 — impossible-golf"}],"\n",["$","blockquote","blockquote-0",{"children":["\n",["$","p","p-0",{"children":"I found this golf game online but the third level is so hard 😩😩"}],"\n",["$","p","p-1",{"children":"See if you can beat it!"}],"\n"]}],"\n",["$","p","p-0",{"children":"We're given a golf minigame that looks like this:"}],"\n",["$","p","p-1",{"children":["$","img","img-0",{"src":"https://gist.github.com/assets/60120929/893f7ccc-c3de-484c-8904-90e96d38422b","alt":"image"}]}],"\n",["$","p","p-2",{"children":["We can see that the client makes a WebSocket connection to the remote server, sending ",["$","code","code-0",{"className":"text-primary bg-black/20 rounded p-1","children":"launch"}]," events whenever the user hits the ball."]}],"\n",["$","p","p-3",{"children":["$","img","img-0",{"src":"https://gist.github.com/assets/60120929/5d954629-5eba-4dfd-819b-6bf247dcdcc7","alt":"image"}]}],"\n",["$","p","p-4",{"children":["$","img","img-0",{"src":"https://gist.github.com/assets/60120929/405a74af-8309-4b4a-8ff6-1d44e1c64b6e","alt":"image"}]}],"\n",["$","p","p-5",{"children":"Unfortunately, as the challenge description suggests, we'll realize when we hit level 3 that the game was rigged from the start:"}],"\n",["$","p","p-6",{"children":["$","img","img-0",{"src":"https://gist.github.com/assets/60120929/c5d937b4-0df6-404e-a640-e429e0bbdce7","alt":"image"}]}],"\n",["$","p","p-7",{"children":"Sadly, this challenge is truly impossible without server source. Luckily, just a few hours later we're given exactly that!"}],"\n",["$","$L13","pre-0",{"className":"my-4","children":"$14","language":"js"}],"\n",["$","p","p-8",{"children":"Looking at the server's event handling logic,"}],"\n",["$","$L13","pre-1",{"className":"my-4","children":"\t\tswitch (parsed?.type) {\n\t\t\tcase \"launch\":\n\t\t\t\tif (!parsed?.value) return;\n\t\t\t\tif (typeof parsed?.value?.dx !== \"number\") return;\n\t\t\t\tif (typeof parsed?.value?.dy !== \"number\") return;\n\t\t\t\tlaunchBall(gameState.circle, parsed.value);\n\t\t\tbreak;\n\t\t\tcase \"cheat\":\n\t\t\t\tgameState.circle.x = gameState.goal.x;\n\t\t\t\tgameState.circle.y = gameState.goal.y;\n\t\t\tbreak;\n\t\t}","language":"js"}],"\n",["$","p","p-9",{"children":"we just cheat 3 times to get the flag."}],"\n",["$","p","p-10",{"children":["$","img","img-0",{"src":"https://gist.github.com/assets/60120929/f5009019-98d8-491d-9570-49ed41da4b56","alt":"image"}]}],"\n",["$","$L13","pre-2",{"className":"my-4","children":"Thank you so much a for to playing my game! sdctf{i'm in your walls dfe6e287-73a9-4d0d-9386-ffa8258a8b69}","language":"$undefined"}]]}]}]
