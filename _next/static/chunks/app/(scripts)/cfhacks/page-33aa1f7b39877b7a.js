(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[944],{16239:(e,a,t)=>{"use strict";t.d(a,{A:()=>s});var n=t(95155);function s(e){let{value:a,setValue:t,label:s}=e;return(0,n.jsxs)("div",{className:"flex flex-col gap-1 flex-grow",children:[(0,n.jsx)("label",{className:"text-xs text-secondary",children:s}),(0,n.jsx)("input",{type:"text",value:a,onChange:e=>t(e.target.value),className:"rounded px-3 py-1 dark:bg-[#2b2b2b] border border-secondary/40"})]})}},28403:(e,a,t)=>{"use strict";t.d(a,{b:()=>r,default:()=>o});var n=t(95155),s=t(12115),l=t(42325);function o(e){var a,t,l;let{sources:o}=e,[c,d]=(0,s.useState)(0),[u,i]=(0,s.useState)([]);return(0,s.useEffect)(()=>{Promise.all(o.map(e=>fetch(e).then(e=>e.text()))).then(e=>i(e))},[]),(0,n.jsxs)("div",{className:"flex flex-col rounded-lg overflow-hidden w-[36rem] h-[36rem] max-w-full flex-none text-xs bg-[#2b2b2b] border border-gray-100/20",children:[(0,n.jsx)("div",{className:"flex bg-[#484a4a]/50",children:o.map((e,a)=>{var t;return(0,n.jsx)("button",{className:"px-3.5 py-1.5 font-[Consolas,_Monaco,_'Andale_Mono',_monospace] text-[#a9b7c6]"+(c===a?" bg-[#2b2b2b]":""),onClick:()=>d(a),children:null==(t=e.match(/.+\/(.+)/))?void 0:t[1]},e)})}),(0,n.jsx)(r,{language:null!=(t="kt"===(l=null==(a=o[c].match(/.+\.(.+)/))?void 0:a[1])?"kotlin":l)?t:"java",children:u[c]})]})}function r(e){return(0,n.jsx)(l.A,{language:e.language,codeTagProps:{style:{}},showLineNumbers:!0,useInlineStyles:!1,children:e.children})}},50674:(e,a,t)=>{"use strict";t.d(a,{default:()=>l});var n=t(95155),s=t(28403);function l(e){return(0,n.jsxs)("div",{className:e.className,children:[(0,n.jsxs)("p",{className:"text-xs bg-black/10 rounded-t-lg px-4 py-0.5 text-secondary",children:["Code",e.language&&" (".concat(e.language,")"),":"," ",(0,n.jsx)("button",{onClick:()=>navigator.clipboard.writeText(e.children),className:"hover:underline",children:"(copy)"})]}),(0,n.jsx)("div",{className:"rounded-b-lg overflow-hidden text-xs",children:(0,n.jsx)(s.b,{language:e.language,children:e.children})})]})}},60205:(e,a,t)=>{"use strict";t.d(a,{A:()=>l});var n=t(95155),s=t(12115);function l(e){let a=(0,s.useRef)(null),{onChange:t,...l}=e;function o(){let e=a.current;e&&(e.style.height="auto",e.style.height=e.scrollHeight+8+"px")}return(0,s.useLayoutEffect)(()=>{o()},[]),(0,n.jsx)("textarea",{ref:a,onChange:e=>{null==t||t(e),o()},...l})}},84784:(e,a,t)=>{Promise.resolve().then(t.bind(t,93424))},93424:(e,a,t)=>{"use strict";t.d(a,{default:()=>c});var n=t(95155),s=t(12115),l=t(60205),o=t(50674),r=t(16239);function c(){let[e,a]=(0,s.useState)(1701),[t,c]=(0,s.useState)("A"),[u,i]=(0,s.useState)(""),[m,b]=(0,s.useState)(1e3);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)("div",{className:"flex flex-wrap gap-x-3 gap-y-1.5 mb-6 md:mb-2.5",children:[(0,n.jsx)(r.A,{label:"Contest",value:e,setValue:e=>!isNaN(Number(e))&&a(Number(e))}),(0,n.jsx)(r.A,{label:"Problem",value:t,setValue:c}),(0,n.jsx)(r.A,{label:"Count",value:m,setValue:e=>!isNaN(Number(e))&&b(Number(e))})]}),(0,n.jsx)(l.A,{placeholder:"Test case",value:u,onChange:e=>i(e.target.value),className:"rounded px-3 py-1 dark:bg-[#2b2b2b] mb-3 w-full border border-secondary/40 placeholder:text-secondary"}),(0,n.jsx)(o.default,{language:"js",children:d(e,t,u,m)})]})}let d=(e,a,t,n)=>"const contestId = ".concat(e,";\nconst problem = '").concat(a.replaceAll(/['\\]/g,"\\$&"),"';\nconst testCase = `").concat(t.replaceAll(/[`\\$]/g,"\\$&"),"`;\nconst count = ").concat(n,';\n\n;(async () => {\n    const submissions = (await (await fetch(`https://codeforces.com/api/contest.status?contestId=${contestId}&from=1&count=${count}`)).json()).result\n        .filter((submission) => submission.verdict === \'OK\' && submission.problem.index === problem);\n\n    for (const submission of submissions) {\n        const raw = await (await fetch(`https://codeforces.com/contest/1701/challenge/${submission.id}`)).text();\n        const [, csrf, body] = raw.match(/<form class="challenge-form".+?action="\\/data\\/challenge\\?csrf_token=(.+?)".*?>([^]+)<\\/form>/);\n\n        const formData = new FormData();\n\n        // Add all hidden fields\n        [...body.matchAll(/<input type="hidden".+?name="(\\w+)".+?value="(\\w+)"\\/>/g)]\n            .forEach(([, name, value]) => formData.append(name, value));\n\n        formData.append(\'testcase\', testCase);\n\n        await fetch(`https://codeforces.com/data/challenge?csrf_token=${csrf}`, {\n            body: formData,\n            method: \'POST\'\n        });\n    }\n})();')}},e=>{var a=a=>e(e.s=a);e.O(0,[325,441,684,358],()=>a(84784)),_N_E=e.O()}]);