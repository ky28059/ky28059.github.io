(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[944],{16239:(e,s,t)=>{"use strict";t.d(s,{A:()=>n});var a=t(95155);function n(e){let{value:s,setValue:t,label:n}=e;return(0,a.jsxs)("div",{className:"flex flex-col gap-1 flex-grow",children:[(0,a.jsx)("label",{className:"text-xs text-secondary",children:n}),(0,a.jsx)("input",{type:"text",value:s,onChange:e=>t(e.target.value),className:"rounded px-3 py-1 dark:bg-[#2b2b2b] border border-secondary/40"})]})}},49123:(e,s,t)=>{"use strict";t.d(s,{A:()=>r});var a=t(95155),n=t(42325);function r(e){return(0,a.jsx)(n.A,{language:e.language,codeTagProps:{style:{}},showLineNumbers:!0,useInlineStyles:!1,children:e.children})}},50674:(e,s,t)=>{"use strict";t.d(s,{default:()=>o});var a=t(95155),n=t(49123),r=t(97780),c=t(35690),l=t(17485);function o(e){let s=function(e){if(!e)return null;switch(e){case"js":case"javascript":return r.AeH;case"ts":case"typescript":return r.cyb;case"py":case"python":return r.ptC;case"kt":case"kotlin":return r.sjH;case"html":return r.$gB;case"perl":return r.COx;case"json":return c.dG_;case"yml":case"yaml":return r.WDB;case"sh":case"bash":return r.$V9;case"diff":return l.Jp4;case"go":return r.ZRx}return null}(e.language);return(0,a.jsxs)("div",{className:"border border-white/10 rounded-lg"+(e.className?" ".concat(e.className):""),children:[(0,a.jsxs)("p",{className:"flex items-center text-xs rounded-t-lg px-3 py-0.5 text-secondary",children:[s?(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s,{className:"text-sm mr-1.5"})," ",e.language]}):(0,a.jsxs)(a.Fragment,{children:["Code",e.language&&" (".concat(e.language,")")]}),(0,a.jsx)("button",{onClick:()=>navigator.clipboard.writeText(e.children),className:"ml-auto hover:underline",children:"(copy)"})]}),(0,a.jsx)("div",{className:"rounded-b-lg overflow-hidden text-xs",children:(0,a.jsx)(n.A,{language:e.language,children:e.children})})]})}},60205:(e,s,t)=>{"use strict";t.d(s,{A:()=>r});var a=t(95155),n=t(12115);function r(e){let s=(0,n.useRef)(null),{onChange:t,...r}=e;function c(){let e=s.current;e&&(e.style.height="auto",e.style.height=e.scrollHeight+8+"px")}return(0,n.useLayoutEffect)(()=>{c()},[]),(0,a.jsx)("textarea",{ref:s,onChange:e=>{null==t||t(e),c()},...r})}},84784:(e,s,t)=>{Promise.resolve().then(t.bind(t,93424))},93424:(e,s,t)=>{"use strict";t.d(s,{default:()=>o});var a=t(95155),n=t(12115),r=t(60205),c=t(50674),l=t(16239);function o(){let[e,s]=(0,n.useState)(1701),[t,o]=(0,n.useState)("A"),[d,i]=(0,n.useState)(""),[m,h]=(0,n.useState)(1e3);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{className:"flex flex-wrap gap-x-3 gap-y-1.5 mb-6 md:mb-2.5",children:[(0,a.jsx)(l.A,{label:"Contest",value:e,setValue:e=>!isNaN(Number(e))&&s(Number(e))}),(0,a.jsx)(l.A,{label:"Problem",value:t,setValue:o}),(0,a.jsx)(l.A,{label:"Count",value:m,setValue:e=>!isNaN(Number(e))&&h(Number(e))})]}),(0,a.jsx)(r.A,{placeholder:"Test case",value:d,onChange:e=>i(e.target.value),className:"rounded px-3 py-1 dark:bg-[#2b2b2b] mb-3 w-full border border-secondary/40 placeholder:text-secondary"}),(0,a.jsx)(c.default,{language:"js",children:u(e,t,d,m)})]})}let u=(e,s,t,a)=>"const contestId = ".concat(e,";\nconst problem = '").concat(s.replaceAll(/['\\]/g,"\\$&"),"';\nconst testCase = `").concat(t.replaceAll(/[`\\$]/g,"\\$&"),"`;\nconst count = ").concat(a,';\n\n;(async () => {\n    const submissions = (await (await fetch(`https://codeforces.com/api/contest.status?contestId=${contestId}&from=1&count=${count}`)).json()).result\n        .filter((submission) => submission.verdict === \'OK\' && submission.problem.index === problem);\n\n    for (const submission of submissions) {\n        const raw = await (await fetch(`https://codeforces.com/contest/1701/challenge/${submission.id}`)).text();\n        const [, csrf, body] = raw.match(/<form class="challenge-form".+?action="\\/data\\/challenge\\?csrf_token=(.+?)".*?>([^]+)<\\/form>/);\n\n        const formData = new FormData();\n\n        // Add all hidden fields\n        [...body.matchAll(/<input type="hidden".+?name="(\\w+)".+?value="(\\w+)"\\/>/g)]\n            .forEach(([, name, value]) => formData.append(name, value));\n\n        formData.append(\'testcase\', testCase);\n\n        await fetch(`https://codeforces.com/data/challenge?csrf_token=${csrf}`, {\n            body: formData,\n            method: \'POST\'\n        });\n    }\n})();')}},e=>{e.O(0,[263,810,330,800,441,964,358],()=>e(e.s=84784)),_N_E=e.O()}]);