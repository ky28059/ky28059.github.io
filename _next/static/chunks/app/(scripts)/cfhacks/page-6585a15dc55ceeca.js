(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[944],{16239:(e,t,a)=>{"use strict";a.d(t,{A:()=>n});var s=a(95155);function n(e){let{value:t,setValue:a,label:n}=e;return(0,s.jsxs)("div",{className:"flex flex-col gap-1 flex-grow",children:[(0,s.jsx)("label",{className:"text-xs text-secondary",children:n}),(0,s.jsx)("input",{type:"text",value:t,onChange:e=>a(e.target.value),className:"rounded px-3 py-1 dark:bg-[#2b2b2b] border border-secondary/40"})]})}},49123:(e,t,a)=>{"use strict";a.d(t,{A:()=>l});var s=a(95155),n=a(42325);function l(e){return(0,s.jsx)(n.A,{language:e.language,codeTagProps:{style:{}},showLineNumbers:!0,useInlineStyles:!1,children:e.children})}},50674:(e,t,a)=>{"use strict";a.d(t,{default:()=>l});var s=a(95155),n=a(49123);function l(e){return(0,s.jsxs)("div",{className:e.className,children:[(0,s.jsxs)("p",{className:"text-xs bg-black/10 rounded-t-lg px-4 py-0.5 text-secondary",children:["Code",e.language&&" (".concat(e.language,")"),":"," ",(0,s.jsx)("button",{onClick:()=>navigator.clipboard.writeText(e.children),className:"hover:underline",children:"(copy)"})]}),(0,s.jsx)("div",{className:"rounded-b-lg overflow-hidden text-xs",children:(0,s.jsx)(n.A,{language:e.language,children:e.children})})]})}},60205:(e,t,a)=>{"use strict";a.d(t,{A:()=>l});var s=a(95155),n=a(12115);function l(e){let t=(0,n.useRef)(null),{onChange:a,...l}=e;function c(){let e=t.current;e&&(e.style.height="auto",e.style.height=e.scrollHeight+8+"px")}return(0,n.useLayoutEffect)(()=>{c()},[]),(0,s.jsx)("textarea",{ref:t,onChange:e=>{null==a||a(e),c()},...l})}},84784:(e,t,a)=>{Promise.resolve().then(a.bind(a,93424))},93424:(e,t,a)=>{"use strict";a.d(t,{default:()=>o});var s=a(95155),n=a(12115),l=a(60205),c=a(50674),r=a(16239);function o(){let[e,t]=(0,n.useState)(1701),[a,o]=(0,n.useState)("A"),[d,i]=(0,n.useState)(""),[m,h]=(0,n.useState)(1e3);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("div",{className:"flex flex-wrap gap-x-3 gap-y-1.5 mb-6 md:mb-2.5",children:[(0,s.jsx)(r.A,{label:"Contest",value:e,setValue:e=>!isNaN(Number(e))&&t(Number(e))}),(0,s.jsx)(r.A,{label:"Problem",value:a,setValue:o}),(0,s.jsx)(r.A,{label:"Count",value:m,setValue:e=>!isNaN(Number(e))&&h(Number(e))})]}),(0,s.jsx)(l.A,{placeholder:"Test case",value:d,onChange:e=>i(e.target.value),className:"rounded px-3 py-1 dark:bg-[#2b2b2b] mb-3 w-full border border-secondary/40 placeholder:text-secondary"}),(0,s.jsx)(c.default,{language:"js",children:u(e,a,d,m)})]})}let u=(e,t,a,s)=>"const contestId = ".concat(e,";\nconst problem = '").concat(t.replaceAll(/['\\]/g,"\\$&"),"';\nconst testCase = `").concat(a.replaceAll(/[`\\$]/g,"\\$&"),"`;\nconst count = ").concat(s,';\n\n;(async () => {\n    const submissions = (await (await fetch(`https://codeforces.com/api/contest.status?contestId=${contestId}&from=1&count=${count}`)).json()).result\n        .filter((submission) => submission.verdict === \'OK\' && submission.problem.index === problem);\n\n    for (const submission of submissions) {\n        const raw = await (await fetch(`https://codeforces.com/contest/1701/challenge/${submission.id}`)).text();\n        const [, csrf, body] = raw.match(/<form class="challenge-form".+?action="\\/data\\/challenge\\?csrf_token=(.+?)".*?>([^]+)<\\/form>/);\n\n        const formData = new FormData();\n\n        // Add all hidden fields\n        [...body.matchAll(/<input type="hidden".+?name="(\\w+)".+?value="(\\w+)"\\/>/g)]\n            .forEach(([, name, value]) => formData.append(name, value));\n\n        formData.append(\'testcase\', testCase);\n\n        await fetch(`https://codeforces.com/data/challenge?csrf_token=${csrf}`, {\n            body: formData,\n            method: \'POST\'\n        });\n    }\n})();')}},e=>{var t=t=>e(e.s=t);e.O(0,[325,441,684,358],()=>t(84784)),_N_E=e.O()}]);