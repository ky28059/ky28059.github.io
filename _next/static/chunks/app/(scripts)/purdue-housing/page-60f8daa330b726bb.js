(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[806],{6562:(e,t,n)=>{Promise.resolve().then(n.bind(n,39951)),Promise.resolve().then(n.bind(n,50674))},16239:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var a=n(95155);function o(e){let{value:t,setValue:n,label:o}=e;return(0,a.jsxs)("div",{className:"flex flex-col gap-1 flex-grow",children:[(0,a.jsx)("label",{className:"text-xs text-secondary",children:o}),(0,a.jsx)("input",{type:"text",value:t,onChange:e=>n(e.target.value),className:"rounded px-3 py-1 dark:bg-[#2b2b2b] border border-secondary/40"})]})}},28403:(e,t,n)=>{"use strict";n.d(t,{b:()=>i,default:()=>r});var a=n(95155),o=n(12115),s=n(42325);function r(e){var t,n,s;let{sources:r}=e,[d,l]=(0,o.useState)(0),[c,u]=(0,o.useState)([]);return(0,o.useEffect)(()=>{Promise.all(r.map(e=>fetch(e).then(e=>e.text()))).then(e=>u(e))},[]),(0,a.jsxs)("div",{className:"flex flex-col rounded-lg overflow-hidden w-[36rem] h-[36rem] max-w-full flex-none text-xs bg-[#2b2b2b] border border-gray-100/20",children:[(0,a.jsx)("div",{className:"flex bg-[#484a4a]/50",children:r.map((e,t)=>{var n;return(0,a.jsx)("button",{className:"px-3.5 py-1.5 font-[Consolas,_Monaco,_'Andale_Mono',_monospace] text-[#a9b7c6]"+(d===t?" bg-[#2b2b2b]":""),onClick:()=>l(t),children:null==(n=e.match(/.+\/(.+)/))?void 0:n[1]},e)})}),(0,a.jsx)(i,{language:null!=(n="kt"===(s=null==(t=r[d].match(/.+\.(.+)/))?void 0:t[1])?"kotlin":s)?n:"java",children:c[d]})]})}function i(e){return(0,a.jsx)(s.A,{language:e.language,codeTagProps:{style:{}},showLineNumbers:!0,useInlineStyles:!1,children:e.children})}},39951:(e,t,n)=>{"use strict";n.d(t,{default:()=>i});var a=n(95155),o=n(12115),s=n(50674),r=n(16239);function i(){let[e,t]=(0,o.useState)(1e3),[n,i]=(0,o.useState)(2e4),[c,u]=(0,o.useState)(1e3),[m,h]=(0,o.useState)([1,34,16,6,4,5]),[p,f]=(0,o.useState)([165,167,166]);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{className:"flex flex-wrap gap-x-3 gap-y-1.5 mb-6 md:mb-4",children:[(0,a.jsx)(r.A,{label:"Lower room rate ($)",value:e,setValue:e=>!isNaN(Number(e))&&t(Number(e))}),(0,a.jsx)(r.A,{label:"Upper room rate ($)",value:n,setValue:e=>!isNaN(Number(e))&&i(Number(e))}),(0,a.jsx)(r.A,{label:"Delay (ms)",value:c,setValue:e=>!isNaN(Number(e))&&u(Number(e))})]}),(0,a.jsxs)("div",{className:"flex gap-8 sm:gap-24 pl-4 mb-4",children:[(0,a.jsxs)("div",{children:[(0,a.jsx)(d,{id:166,ids:p,setIds:f,children:"Apartment"}),(0,a.jsx)(d,{id:165,ids:p,setIds:f,children:"Double"}),(0,a.jsx)(d,{id:198,ids:p,setIds:f,children:"Quad"}),(0,a.jsx)(d,{id:169,ids:p,setIds:f,children:"Single"}),(0,a.jsx)(d,{id:167,ids:p,setIds:f,children:"Suite"}),(0,a.jsx)(d,{id:168,ids:p,setIds:f,children:"Triple"})]}),(0,a.jsxs)("div",{className:"grid sm:grid-cols-2 lg:grid-rows-6 lg:grid-flow-col gap-x-6",children:[(0,a.jsx)(d,{id:1,ids:m,setIds:h,children:"Cary Quadrangle"}),(0,a.jsx)(d,{id:2,ids:m,setIds:h,children:"Earhart"}),(0,a.jsx)(d,{id:3,ids:m,setIds:h,children:"First Street Towers"}),(0,a.jsx)(d,{id:34,ids:m,setIds:h,children:"Frieda Parker"}),(0,a.jsx)(d,{id:4,ids:m,setIds:h,children:"Harrison"}),(0,a.jsx)(d,{id:5,ids:m,setIds:h,children:"Hawkins"}),(0,a.jsx)(d,{id:6,ids:m,setIds:h,children:"Hillenbrand"}),(0,a.jsx)(d,{id:17,ids:m,setIds:h,children:"Honors"}),(0,a.jsx)(d,{id:8,ids:m,setIds:h,children:"McCutcheon"}),(0,a.jsx)(d,{id:9,ids:m,setIds:h,children:"Meredith"}),(0,a.jsx)(d,{id:33,ids:m,setIds:h,children:"Meredith South"}),(0,a.jsx)(d,{id:10,ids:m,setIds:h,children:"Owen"}),(0,a.jsx)(d,{id:12,ids:m,setIds:h,children:"Shreve"}),(0,a.jsx)(d,{id:13,ids:m,setIds:h,children:"Tarkington"}),(0,a.jsx)(d,{id:14,ids:m,setIds:h,children:"Wiley"}),(0,a.jsx)(d,{id:15,ids:m,setIds:h,children:"Windsor"}),(0,a.jsx)(d,{id:16,ids:m,setIds:h,children:"Winifred Parker"})]})]}),(0,a.jsx)(s.default,{language:"js",className:"mb-10",children:l(e,n,c,p,m)})]})}function d(e){let{id:t,ids:n,setIds:o,children:s}=e;return(0,a.jsxs)("div",{className:"flex gap-3 text-primary items-center",children:[(0,a.jsx)("input",{type:"checkbox",className:"accent-grapefruit flex-none",checked:n.includes(t),onChange:e=>{e.target.checked?o([...n,t]):o(n.filter(e=>e!==t))}}),s]})}let l=(e,t,n,a,o)=>"const roomTypeIds = [".concat(a.join(", "),"];\nconst buildingIds = [").concat(o.join(", "),"];\nconst lowerRoomRate = ").concat(e,";\nconst upperRoomRate = ").concat(t,";\nconst delay = ").concat(n,';\n\nlet id;\n;(async () => {\n    // Parse URL token from search param after login\n    const params = new URLSearchParams(location.search);\n    const urlToken = params.get(\'UrlToken\');\n\n    const dateStart = params.get(\'DateStart\');\n    const dateEnd = params.get(\'DateEnd\');\n    const termId = params.get(\'TermID\');\n    const classificationId = params.get(\'ClassificationID\');\n\n    const verificationToken = document.body.innerHTML.match(/<input name="__RequestVerificationToken" type="hidden" value="(.+)"\\s*\\/?>/)?.[1];\n    if (!verificationToken) return log(\'Could not parse request verification token!\');\n\n    const data = document.body.innerHTML.match(/<div class="" data-actualaddingroomtocartoption=".*" data-canaddroomstocart=".*" data-classificationid=".+" data-currencysymbol=".*" data-currentpagenumber="(.+)" data-dateend="(.+)" data-datestart="(.+)" data-filterresultshash="(.+)" data-invalidfieldresponse=".*" data-isauthenticated=".*" data-lowerroomratevalue=".*" data-maximumroomratefilterarialabel=".*" data-maximumroomratefiltervalue=".*" data-minimumroomratefilterarialabel=".*" data-minimumroomratefiltervalue=".*" data-mustselectroommessage=".+" data-portalpageid=".+" data-portalrulestatus=".*" data-processid="(.+)" data-roombaseids=".*" data-roomrateid=".*" data-roomselectionpageid="(.*)" data-showfilterswithoutrooms=".*" data-termid=".+" data-unknowninvalidfieldresponse=".*" data-upperroomratevalue=".*" data-useroommateclassifications=".*" id="page-container">/)\n    if (!data) return log(\'Could not parse other page data!\');\n    const [, currentPageNumber, dateEndISO, dateStartISO, filterHash, processId, roomSelectionPageId] = data;\n\n    // Construct filter request body\n    const filterBody = {\n        classificationID: Number(classificationId),\n        currentPageNumber: Number(currentPageNumber),\n        termID: Number(termId),\n        filters: {\n            DateStart: dateStartISO,\n            DateEnd: dateEndISO,\n            ProfileItemID: roomTypeIds, // Room type IDs\n            RoomLocationID: buildingIds, // Building IDs\n            RoomBaseIDs: [],\n            RoomLocationAreaID: [],\n            RoomLocationFloorSuiteID: [],\n            RoomTypeID: [],\n            UseRoommateClassifications: false,\n            LowerRoomRateValue: lowerRoomRate,\n            UpperRoomRateValue: upperRoomRate,\n        }\n    }\n\n    id = setInterval(queryRooms, delay);\n\n    async function queryRooms() {\n        const res = await fetch(`https://purdue.starrezhousing.com/StarRezPortalX/General/RoomSearch/roomsearch/GetFilterResultsAuthenticated?hash=${filterHash}&pageID=${roomSelectionPageId}&processID=${processId}`, {\n            method: \'POST\',\n            body: JSON.stringify(filterBody),\n            headers: {\n                __RequestVerificationToken: verificationToken,\n                \'Content-Type\': \'application/json\',\n                \'X-Requested-With\': \'XMLHttpRequest\'\n            }\n        });\n        if (!res.ok) return log(\'Error while fetching filter endpoint\');\n\n        const parsed = await res.json();\n        if (!(\'ResultsHtml\' in parsed)) {\n            log(\'Error response when fetching filter endpoint\');\n            return console.log(parsed);\n        }\n\n        console.log(parsed.ResultsHtml);\n\n        // Search HTML response for "add to cart" buttons\n        const matches = [...parsed.ResultsHtml.matchAll(/<button aria-label="Add (.+) To Cart" class="ui-add-room-to-cart sr_button_primary sr_button" data-hash="(.+)" data-url="(.+)" title="Add To Cart" type="button">.+<\\/button>/g)];\n        if (!matches.length) return log(\'No rooms found\');\n\n        for (const [, name, hash, url] of matches) {\n            log(`Found room ${name}`);\n\n            // Match room base and rate ID from broken url data param\n            const roomMatch = url.match(/roomBaseID=(.+?)&amp;roomRateID=(.+?)&amp;/);\n            if (!roomMatch) {\n                log(`Couldn\'t find base and rate ID for room ${name}`)\n                continue;\n            }\n\n            // Add room to cart\n            const [, roomBaseId, roomRateId] = roomMatch;\n            const res = await fetch(`https://purdue.starrezhousing.com/StarRezPortalX/General/RoomSearch/roomsearch/AddRoomToCartForTerm?hash=${hash}&checkInDate=${dateStartISO}&checkOutDate=${dateEndISO}&termID=${termId}&pageID=${roomSelectionPageId}&roomBaseID=${roomBaseId}&roomRateID=${roomRateId}`, {\n                method: \'POST\',\n                body: JSON.stringify({}),\n                headers: {\n                    __RequestVerificationToken: verificationToken,\n                    \'Content-Type\': \'application/json\',\n                    \'X-Requested-With\': \'XMLHttpRequest\'\n                }\n            });\n            if (!res.ok) {\n                log(`Error adding room ${name} to cart`);\n                continue;\n            }\n\n            // Construct next page request body\n            const continueBody = {\n                RoomLocationID: buildingIds,\n                ProfileItemID: roomTypeIds,\n                PageWidgetData: []\n            }\n            for (const id of [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 33, 34])\n                continueBody[`${id}-checkbox`] = buildingIds.includes(id);\n            for (const id of [165, 166, 167, 168, 169, 198])\n                continueBody[`${id}-checkbox`] = roomTypeIds.includes(id);\n\n            // Fetch next page URL and open it in a new tab if everything is successful\n            const checkoutRawUrl = await (await fetch(window.location.href, {\n                method: \'POST\',\n                body: JSON.stringify(continueBody),\n                headers: {\n                    __RequestVerificationToken: verificationToken,\n                    \'Content-Type\': \'application/json\',\n                    \'X-Requested-With\': \'XMLHttpRequest\'\n                }\n            })).text();\n\n            window.open(checkoutRawUrl.slice(1, -1).replaceAll(\'\\\\u0026\', \'&\'));\n            clearInterval(id);\n        }\n    }\n})();\n\nfunction log(m) {\n    console.log(`[${new Date().toLocaleTimeString()}]: ${m}`);\n}')},50674:(e,t,n)=>{"use strict";n.d(t,{default:()=>s});var a=n(95155),o=n(28403);function s(e){return(0,a.jsxs)("div",{className:e.className,children:[(0,a.jsxs)("p",{className:"text-xs bg-black/10 rounded-t-lg px-4 py-0.5 text-secondary",children:["Code",e.language&&" (".concat(e.language,")"),":"," ",(0,a.jsx)("button",{onClick:()=>navigator.clipboard.writeText(e.children),className:"hover:underline",children:"(copy)"})]}),(0,a.jsx)("div",{className:"rounded-b-lg overflow-hidden text-xs",children:(0,a.jsx)(o.b,{language:e.language,children:e.children})})]})}}},e=>{var t=t=>e(e.s=t);e.O(0,[325,441,684,358],()=>t(6562)),_N_E=e.O()}]);